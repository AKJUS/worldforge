Eris TODO

Optimisations

 - replace a call to map::count followed by map::operation[] with a call to
   find, as its twice as efficient.

BUGS

 - addAncestor() gets into a tight loop which suggests that a type lists itself
   as a child. We need to be invulnerable to this.

Test Cases

- sound of action
- hear on Avatar
- Avatar::place
- picking

- simulate a server shutdown (call shutdown() on the client socket)

- cycle character through create, unsubscribe and re-take on a single
  account (needs unsubscribe behaviour to speced and implemented)

1.3 TODO

- useOn possibly needs the ability to use operations other than the default one.

- room creation / binding
  room creation seems okay, the only reason for the pending crap is so
  we can hold the Room object around.
  
  map<serialno, Room*> m_pendingSightCreates on lobby makes this work.
  yech.

- Go over the Poll api, see if work can be delegated to skstream or not

- calendars: look at the code from sear.
 
 - custom routers
 	- run first, but can't consume ops
 	- attached on Connection, or on the 'owning' router?
 	- Conenction seems more robust. re-structure how routers are tracked,
 	  possibly?

- extra (arbitrary) attrs changed by MOVE, generalise to the SET code path.

- Avatar unsubscribe!

Longer Term TODO

- UI backend stuff

