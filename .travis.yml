language: cpp
jobs:
  include:
    - os: linux
      dist: xenial
      compiler: clang
    - os: linux #This one builds the AppImage
      dist: xenial
      compiler: gcc
      env: BUILD_APPIMAGE=1
    - os: linux #This one builds the snap (since core18 is based on bionic)
      dist: bionic
      compiler: gcc
      env: BUILD_SNAP=1
    - os: osx
      osx_image: xcode10.2
      compiler: clang

addons:
  snaps:
    - name: snapcraft
      confinement: classic
  apt:
    packages:
      - ccache
      - python3-pip
      - doxygen
      - graphviz
      - libgl1-mesa-dev
      - libxrandr-dev
      - libxaw7-dev
      - rsync
  homebrew:
    packages:
      - xz
      - ccache
      - python3
      - rsync
git:
  depth: false # We want the complete depth to be able to do "git describe" to get version numbers.

cache:
  - pip
  - ccache
  - directories:
      - $HOME/Library/Caches/Homebrew
      - $HOME/build/worldforge/ember/build/media-0.8.0
before_install:
  - sudo pip3 install --upgrade pip wheel setuptools
  - sudo pip3 install conan
  - conan user
  - conan remote add worldforge https://api.bintray.com/conan/worldforge/worldforge-conan
script:
  - mkdir -p build && cd build
  - conan profile new default --detect
  - |
    if [[ "$TRAVIS_OS_NAME" != "osx" && "$CXX" != "clang++" ]]; then
      conan profile update settings.compiler.libcxx=libstdc++11 default
    fi
  - conan install .. -pr default --build=outdated --update
  - mkdir -p ~/install/usr
  - cmake -DCMAKE_INSTALL_PREFIX=~/install/usr -DCMAKE_BUILD_TYPE=Release ..
  - make media-download
  - make -j2
  - make -j2 check
 # - if [ "$TRAVIS_OS_NAME" != "osx" -a "$CC" == "gcc" ]; then make dox; fi
  - make install
  - |
    if [[ x"$BUILD_APPIMAGE" == x"1" ]]; then
      echo "Building AppImage"
      ln -s ./usr/share/icons/hicolor/64x64/apps/ember.png ~/install/
      ln -s ./usr/share/applications/org.worldforge.ember.desktop ~/install/
      ln -s ember.png ~/install/.DirIcon
      curl -L https://github.com/AppImage/AppImageKit/releases/download/12/AppRun-x86_64 > ~/install/AppRun
      chmod a+x ~/install/AppRun
      curl -L https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage > appimagetool-x86_64.AppImage
      chmod a+x appimagetool-x86_64.AppImage
      ./appimagetool-x86_64.AppImage -n ~/install
    fi
  - |
    if [[ x"$BUILD_SNAP" == x"1" ]]; then
      echo "Building Snap"
      cp snap/snapcraft.yaml ~/install/usr/
      cd ~/install/usr/ && snapcraft --destructive-mode
    fi
deploy:
  - provider: bintray
    file: $HOME/build/worldforge/ember/build/bintray.json
    edge: true # opt in to dpl v2
    on:
      branch: master
      condition: x"$BUILD_APPIMAGE" == x"1"
  - provider: snap
    channel: edge
    snap: $HOME/install/usr/*.snap
    skip_cleanup: true
    on:
      branch: master
      condition: x"$BUILD_SNAP" == x"1"
