// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubAssetsManager_custom.h file.

#ifndef STUB_COMMON_ASSETSMANAGER_H
#define STUB_COMMON_ASSETSMANAGER_H

#include "common/AssetsManager.h"
#include "stubAssetsManager_custom.h"

#ifndef STUB_AssetsManager_AssetsManager
//#define STUB_AssetsManager_AssetsManager
   AssetsManager::AssetsManager(std::unique_ptr<FileSystemObserver> file_system_observer)
    : Singleton(file_system_observer)
  {
    
  }
#endif //STUB_AssetsManager_AssetsManager

#ifndef STUB_AssetsManager_AssetsManager_DTOR
//#define STUB_AssetsManager_AssetsManager_DTOR
   AssetsManager::~AssetsManager()
  {
    
  }
#endif //STUB_AssetsManager_AssetsManager_DTOR

#ifndef STUB_AssetsManager_observeAssetsDirectory
//#define STUB_AssetsManager_observeAssetsDirectory
  void AssetsManager::observeAssetsDirectory()
  {
    
  }
#endif //STUB_AssetsManager_observeAssetsDirectory

#ifndef STUB_AssetsManager_observeFile
//#define STUB_AssetsManager_observeFile
  void AssetsManager::observeFile(std::filesystem::path path, const std::function<void(const std::filesystem::path& path)>& callback)
  {
    
  }
#endif //STUB_AssetsManager_observeFile

#ifndef STUB_AssetsManager_observeDirectory
//#define STUB_AssetsManager_observeDirectory
  void AssetsManager::observeDirectory(std::filesystem::path path, const std::function<void(const std::filesystem::path& path)>& callback)
  {
    
  }
#endif //STUB_AssetsManager_observeDirectory

#ifndef STUB_AssetsManager_stopFileObserver
//#define STUB_AssetsManager_stopFileObserver
  void AssetsManager::stopFileObserver()
  {
    
  }
#endif //STUB_AssetsManager_stopFileObserver


#endif