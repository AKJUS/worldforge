// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubDomain_custom.h file.

#ifndef STUB_RULES_DOMAIN_H
#define STUB_RULES_DOMAIN_H

#include "rules/Domain.h"
#include "stubDomain_custom.h"

#ifndef STUB_Domain_Domain
//#define STUB_Domain_Domain
   Domain::Domain(LocatedEntity& entity)
  {
    
  }
#endif //STUB_Domain_Domain

#ifndef STUB_Domain_Domain_DTOR
//#define STUB_Domain_Domain_DTOR
   Domain::~Domain()
  {
    
  }
#endif //STUB_Domain_Domain_DTOR

#ifndef STUB_Domain_isEntityVisibleFor
//#define STUB_Domain_isEntityVisibleFor
  bool Domain::isEntityVisibleFor(const LocatedEntity& observingEntity, const LocatedEntity& observedEntity) const
  {
    return false;
  }
#endif //STUB_Domain_isEntityVisibleFor

#ifndef STUB_Domain_addEntity
//#define STUB_Domain_addEntity
  void Domain::addEntity(LocatedEntity& entity)
  {
    
  }
#endif //STUB_Domain_addEntity

#ifndef STUB_Domain_removeEntity
//#define STUB_Domain_removeEntity
  void Domain::removeEntity(LocatedEntity& entity)
  {
    
  }
#endif //STUB_Domain_removeEntity

#ifndef STUB_Domain_getVisibleEntitiesFor
//#define STUB_Domain_getVisibleEntitiesFor
  void Domain::getVisibleEntitiesFor(const LocatedEntity& observingEntity, std::list<LocatedEntity*>& entityList) const
  {
    
  }
#endif //STUB_Domain_getVisibleEntitiesFor

#ifndef STUB_Domain_installDelegates
//#define STUB_Domain_installDelegates
  void Domain::installDelegates(LocatedEntity& entity, const std::string& propertyName)
  {
    
  }
#endif //STUB_Domain_installDelegates

#ifndef STUB_Domain_operation
//#define STUB_Domain_operation
  HandlerResult Domain::operation(LocatedEntity& e, const Operation& op, OpVector& res)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_Domain_operation

#ifndef STUB_Domain_observeCloseness
//#define STUB_Domain_observeCloseness
  boost::optional<std::function<()>> Domain::observeCloseness(LocatedEntity& reacher, LocatedEntity& target, double reach, std::function<void()> callback)
  {
    return *static_cast<boost::optional<std::function<()>>*>(nullptr);
  }
#endif //STUB_Domain_observeCloseness


#endif