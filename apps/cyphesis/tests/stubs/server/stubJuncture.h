// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubJuncture_custom.h file.

#ifndef STUB_SERVER_JUNCTURE_H
#define STUB_SERVER_JUNCTURE_H

#include "server/Juncture.h"
#include "stubJuncture_custom.h"


#ifndef STUB_Juncture_onSocketConnected
//#define STUB_Juncture_onSocketConnected
  void Juncture::onSocketConnected()
  {
    
  }
#endif //STUB_Juncture_onSocketConnected

#ifndef STUB_Juncture_onSocketFailed
//#define STUB_Juncture_onSocketFailed
  void Juncture::onSocketFailed()
  {
    
  }
#endif //STUB_Juncture_onSocketFailed

#ifndef STUB_Juncture_onPeerLost
//#define STUB_Juncture_onPeerLost
  void Juncture::onPeerLost()
  {
    
  }
#endif //STUB_Juncture_onPeerLost

#ifndef STUB_Juncture_onPeerReplied
//#define STUB_Juncture_onPeerReplied
  void Juncture::onPeerReplied(const Operation&)
  {
    
  }
#endif //STUB_Juncture_onPeerReplied

#ifndef STUB_Juncture_attemptConnect
//#define STUB_Juncture_attemptConnect
  int Juncture::attemptConnect(const std::string&, int)
  {
    return 0;
  }
#endif //STUB_Juncture_attemptConnect

#ifndef STUB_Juncture_Juncture
//#define STUB_Juncture_Juncture
   Juncture::Juncture(Connection*, RouterId id)
    : ConnectableRouter(Connection, id)
    , m_connection(nullptr),m_peer(nullptr)
  {
    
  }
#endif //STUB_Juncture_Juncture

#ifndef STUB_Juncture_Juncture_DTOR
//#define STUB_Juncture_Juncture_DTOR
   Juncture::~Juncture()
  {
    
  }
#endif //STUB_Juncture_Juncture_DTOR

#ifndef STUB_Juncture_externalOperation
//#define STUB_Juncture_externalOperation
  void Juncture::externalOperation(const Operation& op, Link&)
  {
    
  }
#endif //STUB_Juncture_externalOperation

#ifndef STUB_Juncture_operation
//#define STUB_Juncture_operation
  void Juncture::operation(const Operation&, OpVector&)
  {
    
  }
#endif //STUB_Juncture_operation

#ifndef STUB_Juncture_addToEntity
//#define STUB_Juncture_addToEntity
  void Juncture::addToEntity(const Atlas::Objects::Entity::RootEntity&) const
  {
    
  }
#endif //STUB_Juncture_addToEntity

#ifndef STUB_Juncture_LoginOperation
//#define STUB_Juncture_LoginOperation
  void Juncture::LoginOperation(const Operation&, OpVector&)
  {
    
  }
#endif //STUB_Juncture_LoginOperation

#ifndef STUB_Juncture_OtherOperation
//#define STUB_Juncture_OtherOperation
  void Juncture::OtherOperation(const Operation&, OpVector&)
  {
    
  }
#endif //STUB_Juncture_OtherOperation

#ifndef STUB_Juncture_customConnectOperation
//#define STUB_Juncture_customConnectOperation
  void Juncture::customConnectOperation(const Operation&, OpVector&)
  {
    
  }
#endif //STUB_Juncture_customConnectOperation

#ifndef STUB_Juncture_teleportEntity
//#define STUB_Juncture_teleportEntity
  int Juncture::teleportEntity(const LocatedEntity*)
  {
    return 0;
  }
#endif //STUB_Juncture_teleportEntity

#ifndef STUB_Juncture_setConnection
//#define STUB_Juncture_setConnection
  void Juncture::setConnection(Connection* connection)
  {
    
  }
#endif //STUB_Juncture_setConnection

#ifndef STUB_Juncture_getConnection
//#define STUB_Juncture_getConnection
  Connection* Juncture::getConnection() const
  {
    return nullptr;
  }
#endif //STUB_Juncture_getConnection


#endif