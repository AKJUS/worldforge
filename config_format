The episode4 configuration format

DEFINITIONS

The configuration is a database that consists of sections.

Sections contain configuration items and each section has a section identifier.

A section identifier is a lower case name, consisting of the characters
'a'-'z', '0'-'9', '-' and '_'.

A configuration item consists of a name and a value.

A configuration item name is a lower-case identifier, consisting of the
characters 'a'-'z', '0'-'9', '-' and '_'.

A configuration item value is a piece of information stored internally as a
string value that may be represented as at least one of the configuration
types.

The configuration types include
 - boolean, i.e. 2 possible values, either true or false
 - integer, i.e. a positive or negative whole number
 - double, i.e. a double-precision positive or negative real number
 - string, i.e. a free-form string of characters including all characters in
   the ASCII character set from characters 32-255

---

CONFIGURATION FILE FORMAT

A line in a configuration file can either be the start of a section, a
configuration item or a comment.

\n denotes the end of a line or the end of the file
{ws} denotes any (0 or more) amount of whitespace
{nm} denotes a name consisting of a-z, A-Z, 0-9, '_' or '-'
{ac} denotes any character other than '"'
{cm} denotes any character other than \n

Syntax for section start:

{ws}[{nm}]{ws}\n

Syntax for configuration item:

{ws}{nm}{ws}={ws}{nm{ws}\n
  or
{ws}{nm}{ws}={ws}"{ac}"{ws}\n

Syntax for comment:

{ws}#{cm}\n

Note that upper case characters (A-Z) in configuration item names and section
names get converted to their lower case equivalents (a-z) automatically.

A configuration item may be followed by a comment.

Empty lines (lines with 0 or more whitespaces and no other characters) are
ignored.

---

COMMAND-LINE OPTIONS

Command-line options are formatted in the following manner:

Long Form

--section_name:config_item_name=value

The only required part of the long form is the item name.  If the '=' is omitted, the value defaults to "" and if the ':' is omitted, the section defaults to "" (the "unspecified" section).


Short Form

-n value

A short form (single letter) argument must be attached to a long name before it can be read.  This is accomplished by calling the setParameterLookup method in the following manner:

setParameterLookup( short_form, long_form, needs_value)

Where short_form is the single letter form the of argument, long_form is the full length name and needs_value is a boolean that is true if the short form is followed by a value and false it is not.  ie:

-n 1    needs_value = true
-n      needs_value = false

Note that all short_form arguments are stored in the unspecified section.


---

ENVIRONMENTAL OPTIONS


All environment variables with a specified prefix are read into the configuration information.  To read the variables WF_ONE and WF_TWO for example, you would specifiy the prefix as WF_ . 

All environment variables are stored in the unspecified section. 

