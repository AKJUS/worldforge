name: Build all

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # This makes it correctly use C++11 API on GCC by default.
  CONAN_V2_MODE: 1
  CONAN_REVISIONS_ENABLED: 1
  CONAN_SCM_TO_CONANDATA: 1
  CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
  CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022, macos-11, macos-12 ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Conan
        shell: bash
        run: |
          pip install -r .github/workflows/requirements.txt
          conan --version
          conan user
          conan remote add worldforge https://artifactory.ogenvik.org/artifactory/api/conan/conan
          conan profile new default --detect

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Have Conan install packages
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          conan install ../tools/conan -pr default --build=missing --update

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=ON

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --target check

      - name: Upload artifacts
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          if [[ x"$CONAN_PASSWORD" != "x" && x"$CONAN_LOGIN_USERNAME" != "x" ]]; then
            echo "Creating and uploading Conan artifacts"
            conan user -p $CONAN_PASSWORD -r worldforge $CONAN_LOGIN_USERNAME
            conan create ../tools/conan worldforge/testing -pr default
            conan upload "*" -r worldforge -c --all
          fi
