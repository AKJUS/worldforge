// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubCyPy_Quaternion_custom.h file.

#ifndef STUB_RULES_PYTHON_CYPY_QUATERNION_H
#define STUB_RULES_PYTHON_CYPY_QUATERNION_H

#include "rules/python/CyPy_Quaternion.h"
#include "stubCyPy_Quaternion_custom.h"

#ifndef STUB_CyPy_Quaternion_CyPy_Quaternion
//#define STUB_CyPy_Quaternion_CyPy_Quaternion
   CyPy_Quaternion::CyPy_Quaternion(Py::PythonClassInstance* self, Py::Tuple& args, Py::Dict& kwds)
    : WrapperBase(self, args, kwds)
  {
    
  }
#endif //STUB_CyPy_Quaternion_CyPy_Quaternion

#ifndef STUB_CyPy_Quaternion_CyPy_Quaternion
//#define STUB_CyPy_Quaternion_CyPy_Quaternion
   CyPy_Quaternion::CyPy_Quaternion(Py::PythonClassInstance* self, WFMath::Quaternion value)
    : WrapperBase(self, value)
  {
    
  }
#endif //STUB_CyPy_Quaternion_CyPy_Quaternion

#ifndef STUB_CyPy_Quaternion_init_type
//#define STUB_CyPy_Quaternion_init_type
   void CyPy_Quaternion::init_type()
  {
    
  }
#endif //STUB_CyPy_Quaternion_init_type

#ifndef STUB_CyPy_Quaternion_is_valid
//#define STUB_CyPy_Quaternion_is_valid
  Py::Object CyPy_Quaternion::is_valid()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Quaternion_is_valid

#ifndef STUB_CyPy_Quaternion_as_list
//#define STUB_CyPy_Quaternion_as_list
  Py::Object CyPy_Quaternion::as_list()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Quaternion_as_list

#ifndef STUB_CyPy_Quaternion_rotation
//#define STUB_CyPy_Quaternion_rotation
  Py::Object CyPy_Quaternion::rotation(const Py::Tuple& args)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Quaternion_rotation

#ifndef STUB_CyPy_Quaternion_getattro
//#define STUB_CyPy_Quaternion_getattro
  Py::Object CyPy_Quaternion::getattro(const Py::String& name)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Quaternion_getattro

#ifndef STUB_CyPy_Quaternion_repr
//#define STUB_CyPy_Quaternion_repr
  Py::Object CyPy_Quaternion::repr()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Quaternion_repr

#ifndef STUB_CyPy_Quaternion_rich_compare
//#define STUB_CyPy_Quaternion_rich_compare
  Py::Object CyPy_Quaternion::rich_compare(const Py::Object& other, int type)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Quaternion_rich_compare

#ifndef STUB_CyPy_Quaternion_number_multiply
//#define STUB_CyPy_Quaternion_number_multiply
  Py::Object CyPy_Quaternion::number_multiply(const Py::Object& other)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Quaternion_number_multiply


#endif