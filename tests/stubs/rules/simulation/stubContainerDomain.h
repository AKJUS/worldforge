// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubContainerDomain_custom.h file.

#ifndef STUB_RULES_SIMULATION_CONTAINERDOMAIN_H
#define STUB_RULES_SIMULATION_CONTAINERDOMAIN_H

#include "rules/simulation/ContainerDomain.h"
#include "stubContainerDomain_custom.h"

#ifndef STUB_ContainerDomain_ContainerDomain
//#define STUB_ContainerDomain_ContainerDomain
   ContainerDomain::ContainerDomain(LocatedEntity& entity)
    : Domain(entity)
  {
    
  }
#endif //STUB_ContainerDomain_ContainerDomain

#ifndef STUB_ContainerDomain_isEntityVisibleFor
//#define STUB_ContainerDomain_isEntityVisibleFor
  bool ContainerDomain::isEntityVisibleFor(const LocatedEntity& observingEntity, const LocatedEntity& observedEntity) const
  {
    return false;
  }
#endif //STUB_ContainerDomain_isEntityVisibleFor

#ifndef STUB_ContainerDomain_getVisibleEntitiesFor
//#define STUB_ContainerDomain_getVisibleEntitiesFor
  void ContainerDomain::getVisibleEntitiesFor(const LocatedEntity& observingEntity, std::list<LocatedEntity*>& entityList) const
  {
    
  }
#endif //STUB_ContainerDomain_getVisibleEntitiesFor

#ifndef STUB_ContainerDomain_getObservingEntitiesFor
//#define STUB_ContainerDomain_getObservingEntitiesFor
  std::list<LocatedEntity*> ContainerDomain::getObservingEntitiesFor(const LocatedEntity& observedEntity) const
  {
    return std::list<LocatedEntity*>();
  }
#endif //STUB_ContainerDomain_getObservingEntitiesFor

#ifndef STUB_ContainerDomain_addEntity
//#define STUB_ContainerDomain_addEntity
  void ContainerDomain::addEntity(LocatedEntity& entity)
  {
    
  }
#endif //STUB_ContainerDomain_addEntity

#ifndef STUB_ContainerDomain_removeEntity
//#define STUB_ContainerDomain_removeEntity
  void ContainerDomain::removeEntity(LocatedEntity& entity)
  {
    
  }
#endif //STUB_ContainerDomain_removeEntity

#ifndef STUB_ContainerDomain_isEntityReachable
//#define STUB_ContainerDomain_isEntityReachable
  bool ContainerDomain::isEntityReachable(const LocatedEntity& reachingEntity, float reach, const LocatedEntity& queriedEntity, const WFMath::Point<3>& positionOnQueriedEntity) const
  {
    return false;
  }
#endif //STUB_ContainerDomain_isEntityReachable


#endif