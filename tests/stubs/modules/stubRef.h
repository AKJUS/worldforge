// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubRef_custom.h file.

#ifndef STUB_MODULES_REF_H
#define STUB_MODULES_REF_H

#include "modules/Ref.h"
#include "stubRef_custom.h"

#ifndef STUB_Ref_Ref
//#define STUB_Ref_Ref
  template <typename T>
  constexpr Ref<T>::Ref()
    : operator(nullptr),!(nullptr),m_inner(nullptr)
  {
    return *static_cast<constexpr*>(nullptr);
  }
#endif //STUB_Ref_Ref

#ifndef STUB_Ref_Ref
//#define STUB_Ref_Ref
  template <typename T>
  constexpr Ref<T>::Ref(const Ref& rhs)
    : operator(nullptr),!(nullptr),m_inner(nullptr)
  {
    return *static_cast<constexpr*>(nullptr);
  }
#endif //STUB_Ref_Ref

#ifndef STUB_Ref_Ref
//#define STUB_Ref_Ref
  template <typename T>
  constexpr Ref<T>::Ref(Ref&& rhs)
    : operator(nullptr),!(nullptr),m_inner(nullptr)
  {
    return *static_cast<constexpr*>(nullptr);
  }
#endif //STUB_Ref_Ref

#ifndef STUB_Ref_Ref
//#define STUB_Ref_Ref
  template <typename T>
  constexpr Ref<T>::Ref(T* entity)
    : operator(nullptr),!(nullptr),m_inner(nullptr)
  {
    return *static_cast<constexpr*>(nullptr);
  }
#endif //STUB_Ref_Ref

#ifndef STUB_Ref_Ref_DTOR
//#define STUB_Ref_Ref_DTOR
  template <typename T>
   Ref<T>::~Ref()
  {
    
  }
#endif //STUB_Ref_Ref_DTOR

#ifndef STUB_Ref_*
//#define STUB_Ref_*
  template <typename T>
  explicit operator constexpr T Ref<T>::*() const
  {
    return *static_cast<explicit operator constexpr T*>(nullptr);
  }
#endif //STUB_Ref_*


#endif