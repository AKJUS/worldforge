// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubCyPy_Axisbox_custom.h file.

#ifndef STUB_RULESETS_PYTHON_CYPY_AXISBOX_H
#define STUB_RULESETS_PYTHON_CYPY_AXISBOX_H

#include "rulesets/python/CyPy_Axisbox.h"
#include "stubCyPy_Axisbox_custom.h"

#ifndef STUB_CyPy_Axisbox_CyPy_Axisbox
//#define STUB_CyPy_Axisbox_CyPy_Axisbox
   CyPy_Axisbox::CyPy_Axisbox(Py::PythonClassInstance* self, Py::Tuple& args, Py::Dict& kwds)
    : WrapperBase(self, args, kwds)
  {
    
  }
#endif //STUB_CyPy_Axisbox_CyPy_Axisbox

#ifndef STUB_CyPy_Axisbox_CyPy_Axisbox
//#define STUB_CyPy_Axisbox_CyPy_Axisbox
   CyPy_Axisbox::CyPy_Axisbox(Py::PythonClassInstance* self, WFMath::AxisBox<3> value)
    : WrapperBase(self, value)
  {
    
  }
#endif //STUB_CyPy_Axisbox_CyPy_Axisbox

#ifndef STUB_CyPy_Axisbox_init_type
//#define STUB_CyPy_Axisbox_init_type
   void CyPy_Axisbox::init_type()
  {
    
  }
#endif //STUB_CyPy_Axisbox_init_type

#ifndef STUB_CyPy_Axisbox_sqr_bounding_radius
//#define STUB_CyPy_Axisbox_sqr_bounding_radius
  Py::Object CyPy_Axisbox::sqr_bounding_radius()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Axisbox_sqr_bounding_radius

#ifndef STUB_CyPy_Axisbox_sqr_horizontal_bounding_radius
//#define STUB_CyPy_Axisbox_sqr_horizontal_bounding_radius
  Py::Object CyPy_Axisbox::sqr_horizontal_bounding_radius()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Axisbox_sqr_horizontal_bounding_radius

#ifndef STUB_CyPy_Axisbox_as_sequence
//#define STUB_CyPy_Axisbox_as_sequence
  Py::Object CyPy_Axisbox::as_sequence()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Axisbox_as_sequence

#ifndef STUB_CyPy_Axisbox_getattro
//#define STUB_CyPy_Axisbox_getattro
  Py::Object CyPy_Axisbox::getattro(const Py::String& name)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Axisbox_getattro

#ifndef STUB_CyPy_Axisbox_setattro
//#define STUB_CyPy_Axisbox_setattro
  int CyPy_Axisbox::setattro(const Py::String& name, const Py::Object& attr)
  {
    return 0;
  }
#endif //STUB_CyPy_Axisbox_setattro

#ifndef STUB_CyPy_Axisbox_rich_compare
//#define STUB_CyPy_Axisbox_rich_compare
  Py::Object CyPy_Axisbox::rich_compare(const Py::Object& other, int type)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Axisbox_rich_compare


#endif