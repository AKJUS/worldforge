// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubCyPy_UsageInstance_custom.h file.

#ifndef STUB_RULESETS_PYTHON_CYPY_USAGEINSTANCE_H
#define STUB_RULESETS_PYTHON_CYPY_USAGEINSTANCE_H

#include "rulesets/python/CyPy_UsageInstance.h"
#include "stubCyPy_UsageInstance_custom.h"

#ifndef STUB_CyPy_Usage_CyPy_Usage
//#define STUB_CyPy_Usage_CyPy_Usage
   CyPy_Usage::CyPy_Usage(Py::PythonClassInstance* self, Py::Tuple& args, Py::Dict& kwds)
    : WrapperBase(self, args, kwds)
  {
    
  }
#endif //STUB_CyPy_Usage_CyPy_Usage

#ifndef STUB_CyPy_Usage_CyPy_Usage
//#define STUB_CyPy_Usage_CyPy_Usage
   CyPy_Usage::CyPy_Usage(Py::PythonClassInstance* self, Usage value)
    : WrapperBase(self, value)
  {
    
  }
#endif //STUB_CyPy_Usage_CyPy_Usage

#ifndef STUB_CyPy_Usage_init_type
//#define STUB_CyPy_Usage_init_type
   void CyPy_Usage::init_type()
  {
    
  }
#endif //STUB_CyPy_Usage_init_type

#ifndef STUB_CyPy_Usage_getattro
//#define STUB_CyPy_Usage_getattro
  Py::Object CyPy_Usage::getattro(const Py::String& name)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Usage_getattro

#ifndef STUB_CyPy_Usage_setattro
//#define STUB_CyPy_Usage_setattro
  int CyPy_Usage::setattro(const Py::String& name, const Py::Object& attr)
  {
    return 0;
  }
#endif //STUB_CyPy_Usage_setattro


#ifndef STUB_CyPy_UsageInstance_CyPy_UsageInstance
//#define STUB_CyPy_UsageInstance_CyPy_UsageInstance
   CyPy_UsageInstance::CyPy_UsageInstance(Py::PythonClassInstance* self, Py::Tuple& args, Py::Dict& kwds)
    : WrapperBase(self, args, kwds)
  {
    
  }
#endif //STUB_CyPy_UsageInstance_CyPy_UsageInstance

#ifndef STUB_CyPy_UsageInstance_CyPy_UsageInstance
//#define STUB_CyPy_UsageInstance_CyPy_UsageInstance
   CyPy_UsageInstance::CyPy_UsageInstance(Py::PythonClassInstance* self, UsageInstance value)
    : WrapperBase(self, value)
  {
    
  }
#endif //STUB_CyPy_UsageInstance_CyPy_UsageInstance

#ifndef STUB_CyPy_UsageInstance_init_type
//#define STUB_CyPy_UsageInstance_init_type
   void CyPy_UsageInstance::init_type()
  {
    
  }
#endif //STUB_CyPy_UsageInstance_init_type

#ifndef STUB_CyPy_UsageInstance_getattro
//#define STUB_CyPy_UsageInstance_getattro
  Py::Object CyPy_UsageInstance::getattro(const Py::String& name)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_UsageInstance_getattro

#ifndef STUB_CyPy_UsageInstance_setattro
//#define STUB_CyPy_UsageInstance_setattro
  int CyPy_UsageInstance::setattro(const Py::String& name, const Py::Object& attr)
  {
    return 0;
  }
#endif //STUB_CyPy_UsageInstance_setattro

#ifndef STUB_CyPy_UsageInstance_isValid
//#define STUB_CyPy_UsageInstance_isValid
  Py::Object CyPy_UsageInstance::isValid()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_UsageInstance_isValid

#ifndef STUB_CyPy_UsageInstance_getArg
//#define STUB_CyPy_UsageInstance_getArg
  Py::Object CyPy_UsageInstance::getArg(const Py::Tuple& args)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_UsageInstance_getArg

#ifndef STUB_CyPy_UsageInstance_getArg
//#define STUB_CyPy_UsageInstance_getArg
   Py::Object CyPy_UsageInstance::getArg(const UsageInstance& instance, const Py::Tuple& args)
  {
    return *static_cast< Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_UsageInstance_getArg


#endif