// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubCyPy_LocatedEntity_custom.h file.

#ifndef STUB_RULESETS_PYTHON_CYPY_LOCATEDENTITY_H
#define STUB_RULESETS_PYTHON_CYPY_LOCATEDENTITY_H

#include "rulesets/python/CyPy_LocatedEntity.h"
#include "stubCyPy_LocatedEntity_custom.h"

#ifndef STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase
//#define STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase
  template <typename TValue,typename TPythonClass>
   CyPy_LocatedEntityBase<TValue,TPythonClass>::CyPy_LocatedEntityBase(Py::PythonClassInstance* self, Py::Tuple& args, Py::Dict& kwds)
    : WrapperBase(self, args, kwds)
  {
    
  }
#endif //STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase

#ifndef STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase_DTOR
//#define STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase_DTOR
  template <typename TValue,typename TPythonClass>
   CyPy_LocatedEntityBase<TValue,TPythonClass>::~CyPy_LocatedEntityBase()
  {
    
  }
#endif //STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase_DTOR

#ifndef STUB_CyPy_LocatedEntityBase_getattro
//#define STUB_CyPy_LocatedEntityBase_getattro
  template <typename TValue,typename TPythonClass>
  Py::Object CyPy_LocatedEntityBase<TValue,TPythonClass>::getattro(const Py::String&)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntityBase_getattro

#ifndef STUB_CyPy_LocatedEntityBase_setattro
//#define STUB_CyPy_LocatedEntityBase_setattro
  template <typename TValue,typename TPythonClass>
  int CyPy_LocatedEntityBase<TValue,TPythonClass>::setattro(const Py::String& name, const Py::Object& attr)
  {
    return 0;
  }
#endif //STUB_CyPy_LocatedEntityBase_setattro

#ifndef STUB_CyPy_LocatedEntityBase_rich_compare
//#define STUB_CyPy_LocatedEntityBase_rich_compare
  template <typename TValue,typename TPythonClass>
  Py::Object CyPy_LocatedEntityBase<TValue,TPythonClass>::rich_compare(const Py::Object&, int)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntityBase_rich_compare

#ifndef STUB_CyPy_LocatedEntityBase_wrap
//#define STUB_CyPy_LocatedEntityBase_wrap
  template <typename TValue,typename TPythonClass>
   Py::Object CyPy_LocatedEntityBase<TValue,TPythonClass>::wrap(LocatedEntity* value)
  {
    return *static_cast< Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntityBase_wrap

#ifndef STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase
//#define STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase
  template <typename TValue,typename TPythonClass>
   CyPy_LocatedEntityBase<TValue,TPythonClass>::CyPy_LocatedEntityBase(Py::PythonClassInstance* self, TValue value)
    : WrapperBase(self, value)
  {
    
  }
#endif //STUB_CyPy_LocatedEntityBase_CyPy_LocatedEntityBase

#ifndef STUB_CyPy_LocatedEntityBase_as_entity
//#define STUB_CyPy_LocatedEntityBase_as_entity
  template <typename TValue,typename TPythonClass>
  Py::Object CyPy_LocatedEntityBase<TValue,TPythonClass>::as_entity()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntityBase_as_entity

#ifndef STUB_CyPy_LocatedEntityBase_is_reachable_for_other_entity
//#define STUB_CyPy_LocatedEntityBase_is_reachable_for_other_entity
  template <typename TValue,typename TPythonClass>
  Py::Object CyPy_LocatedEntityBase<TValue,TPythonClass>::is_reachable_for_other_entity(const Py::Tuple& args)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntityBase_is_reachable_for_other_entity

#ifndef STUB_CyPy_LocatedEntityBase_describe_entity
//#define STUB_CyPy_LocatedEntityBase_describe_entity
  template <typename TValue,typename TPythonClass>
  Py::Object CyPy_LocatedEntityBase<TValue,TPythonClass>::describe_entity()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntityBase_describe_entity


#ifndef STUB_CyPy_LocatedEntity_check
//#define STUB_CyPy_LocatedEntity_check
   bool CyPy_LocatedEntity::check(PyObject* object)
  {
    return false;
  }
#endif //STUB_CyPy_LocatedEntity_check

#ifndef STUB_CyPy_LocatedEntity_check
//#define STUB_CyPy_LocatedEntity_check
   bool CyPy_LocatedEntity::check(const Py::Object& object)
  {
    return false;
  }
#endif //STUB_CyPy_LocatedEntity_check

#ifndef STUB_CyPy_LocatedEntity_wrap
//#define STUB_CyPy_LocatedEntity_wrap
   Py::Object CyPy_LocatedEntity::wrap(LocatedEntity* value)
  {
    return *static_cast< Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntity_wrap

#ifndef STUB_CyPy_LocatedEntity_value
//#define STUB_CyPy_LocatedEntity_value
   LocatedEntity& CyPy_LocatedEntity::value(const Py::Object& object)
  {
    return *static_cast< LocatedEntity*>(nullptr);
  }
#endif //STUB_CyPy_LocatedEntity_value


#endif