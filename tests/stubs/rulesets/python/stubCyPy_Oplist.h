// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubCyPy_Oplist_custom.h file.

#ifndef STUB_RULESETS_PYTHON_CYPY_OPLIST_H
#define STUB_RULESETS_PYTHON_CYPY_OPLIST_H

#include "rulesets/python/CyPy_Oplist.h"
#include "stubCyPy_Oplist_custom.h"

#ifndef STUB_CyPy_Oplist_CyPy_Oplist
//#define STUB_CyPy_Oplist_CyPy_Oplist
   CyPy_Oplist::CyPy_Oplist(Py::PythonClassInstance* self, Py::Tuple& args, Py::Dict& kwds)
    : WrapperBase(self, args, kwds)
  {
    
  }
#endif //STUB_CyPy_Oplist_CyPy_Oplist

#ifndef STUB_CyPy_Oplist_CyPy_Oplist
//#define STUB_CyPy_Oplist_CyPy_Oplist
   CyPy_Oplist::CyPy_Oplist(Py::PythonClassInstance* self, std::vector<Atlas::Objects::Operation::RootOperation> value)
    : WrapperBase(self, value)
  {
    
  }
#endif //STUB_CyPy_Oplist_CyPy_Oplist

#ifndef STUB_CyPy_Oplist_init_type
//#define STUB_CyPy_Oplist_init_type
   void CyPy_Oplist::init_type()
  {
    
  }
#endif //STUB_CyPy_Oplist_init_type

#ifndef STUB_CyPy_Oplist_append
//#define STUB_CyPy_Oplist_append
  Py::Object CyPy_Oplist::append(const Py::Tuple& args)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Oplist_append

#ifndef STUB_CyPy_Oplist_appendToList
//#define STUB_CyPy_Oplist_appendToList
   void CyPy_Oplist::appendToList(const Py::Object& op, std::vector<Atlas::Objects::Operation::RootOperation>& list)
  {
    
  }
#endif //STUB_CyPy_Oplist_appendToList

#ifndef STUB_CyPy_Oplist_number_add
//#define STUB_CyPy_Oplist_number_add
  Py::Object CyPy_Oplist::number_add(const Py::Object& other)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Oplist_number_add

#ifndef STUB_CyPy_Oplist_sequence_inplace_concat
//#define STUB_CyPy_Oplist_sequence_inplace_concat
  Py::Object CyPy_Oplist::sequence_inplace_concat(const Py::Object& other)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Oplist_sequence_inplace_concat

#ifndef STUB_CyPy_Oplist_sequence_length
//#define STUB_CyPy_Oplist_sequence_length
  PyCxx_ssize_t CyPy_Oplist::sequence_length()
  {
    return *static_cast<PyCxx_ssize_t*>(nullptr);
  }
#endif //STUB_CyPy_Oplist_sequence_length


#endif