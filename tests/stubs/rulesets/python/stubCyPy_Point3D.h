// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubCyPy_Point3D_custom.h file.

#ifndef STUB_RULESETS_PYTHON_CYPY_POINT3D_H
#define STUB_RULESETS_PYTHON_CYPY_POINT3D_H

#include "rulesets/python/CyPy_Point3D.h"
#include "stubCyPy_Point3D_custom.h"

#ifndef STUB_CyPy_Point3D_CyPy_Point3D
//#define STUB_CyPy_Point3D_CyPy_Point3D
   CyPy_Point3D::CyPy_Point3D(Py::PythonClassInstance* self, Py::Tuple& args, Py::Dict& kwds)
    : WrapperBase(self, args, kwds)
  {
    
  }
#endif //STUB_CyPy_Point3D_CyPy_Point3D

#ifndef STUB_CyPy_Point3D_CyPy_Point3D
//#define STUB_CyPy_Point3D_CyPy_Point3D
   CyPy_Point3D::CyPy_Point3D(Py::PythonClassInstance* self, WFMath::Point<3> value)
    : WrapperBase(self, value)
  {
    
  }
#endif //STUB_CyPy_Point3D_CyPy_Point3D

#ifndef STUB_CyPy_Point3D_parse
//#define STUB_CyPy_Point3D_parse
   WFMath::Point<3> CyPy_Point3D::parse(const Py::Object& object)
  {
    return *static_cast< WFMath::Point<3>*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_parse

#ifndef STUB_CyPy_Point3D_init_type
//#define STUB_CyPy_Point3D_init_type
   void CyPy_Point3D::init_type()
  {
    
  }
#endif //STUB_CyPy_Point3D_init_type

#ifndef STUB_CyPy_Point3D_getattro
//#define STUB_CyPy_Point3D_getattro
  Py::Object CyPy_Point3D::getattro(const Py::String&)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_getattro

#ifndef STUB_CyPy_Point3D_setattro
//#define STUB_CyPy_Point3D_setattro
  int CyPy_Point3D::setattro(const Py::String& name, const Py::Object& attr)
  {
    return 0;
  }
#endif //STUB_CyPy_Point3D_setattro

#ifndef STUB_CyPy_Point3D_repr
//#define STUB_CyPy_Point3D_repr
  Py::Object CyPy_Point3D::repr()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_repr

#ifndef STUB_CyPy_Point3D_rich_compare
//#define STUB_CyPy_Point3D_rich_compare
  Py::Object CyPy_Point3D::rich_compare(const Py::Object& other, int type)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_rich_compare

#ifndef STUB_CyPy_Point3D_sequence_length
//#define STUB_CyPy_Point3D_sequence_length
  PyCxx_ssize_t CyPy_Point3D::sequence_length()
  {
    return *static_cast<PyCxx_ssize_t*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_sequence_length

#ifndef STUB_CyPy_Point3D_sequence_item
//#define STUB_CyPy_Point3D_sequence_item
  Py::Object CyPy_Point3D::sequence_item(Py_ssize_t pos)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_sequence_item

#ifndef STUB_CyPy_Point3D_sequence_ass_item
//#define STUB_CyPy_Point3D_sequence_ass_item
  int CyPy_Point3D::sequence_ass_item(Py_ssize_t pos, const Py::Object& other)
  {
    return 0;
  }
#endif //STUB_CyPy_Point3D_sequence_ass_item

#ifndef STUB_CyPy_Point3D_number_add
//#define STUB_CyPy_Point3D_number_add
  Py::Object CyPy_Point3D::number_add(const Py::Object& other)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_number_add

#ifndef STUB_CyPy_Point3D_number_subtract
//#define STUB_CyPy_Point3D_number_subtract
  Py::Object CyPy_Point3D::number_subtract(const Py::Object& other)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_number_subtract

#ifndef STUB_CyPy_Point3D_mag
//#define STUB_CyPy_Point3D_mag
  Py::Object CyPy_Point3D::mag()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_mag

#ifndef STUB_CyPy_Point3D_unit_vector_to
//#define STUB_CyPy_Point3D_unit_vector_to
  Py::Object CyPy_Point3D::unit_vector_to(const Py::Tuple& args)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_unit_vector_to

#ifndef STUB_CyPy_Point3D_is_valid
//#define STUB_CyPy_Point3D_is_valid
  Py::Object CyPy_Point3D::is_valid()
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_is_valid

#ifndef STUB_CyPy_Point3D_distance
//#define STUB_CyPy_Point3D_distance
  Py::Object CyPy_Point3D::distance(const Py::Tuple& args)
  {
    return *static_cast<Py::Object*>(nullptr);
  }
#endif //STUB_CyPy_Point3D_distance


#endif