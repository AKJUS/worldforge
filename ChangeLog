2003-06-23  Al Riddoch  <alriddoch@zepler.org>

	* Changes to Makefile.ams to try and get distcheck to work.

	* tutorial/simple_client.cpp, tutorial/simple_server.cpp,
	  tutorial/DebugBridge.h: Include the library headers correctly.

2003-06-04  Al Riddoch  <alriddoch@zepler.org>

	* Add rpm spec.

2003-05-04  Al Riddoch  <alriddoch@zepler.org>

	* Fix linking tests with the right other libraries.

2003-05-04  Al Riddoch  <alriddoch@zepler.org>

	* Atlas/Message/Element.h, Atlas/Message/Element.cpp: Move over to
	  calling Atlas::Message::Object Atlas::Message::Element instead.

	* Atlas/Bindings/Python/wrapperObject.cpp, Atlas/Message/DecoderBase.h,
	  Atlas/Message/MEncoder.cpp, Atlas/Message/MEncoder.h,
	  Atlas/Message/QueuedDecoder.h, Atlas/Objects/BaseObject.h:
	  Update everything to make use of the newly re-named Element
	  class.

2003-04-15  Al Riddoch  <alriddoch@zepler.org>

	* Atlas/Objects/BaseObject.cpp: Re-implement asMessage() in terms of
	  addToMessage() and make it non-virtual.

	* Atlas/Objects/AttributeInfo.py, Atlas/Objects/gen_cpp.py: Move
	  send*() functions into the implementation, while keeping them
	  inlined, as there is no need for them to be exposed as inlined.

	* Atlas/Objects/gen_cpp.py: Remove asMessage().

2003-04-14  Al Riddoch  <alriddoch@zepler.org>

	* Atlas/Objects/AttributeInfo.py: Add explicit send members for
	  the more complex sequence types, to avoid having
	  to use a Message::Encoder.

2003-04-14  Al Riddoch  <alriddoch@zepler.org>

	* Atlas/EncoderBase.cpp, Atlas/EncoderBase.h,
	  Atlas/Message/MEncoder.cpp, Atlas/Message/MEncoder.h,
	  Atlas/Objects/AttributeInfo.py, Atlas/Objects/BaseObject.cpp,
	  Atlas/Objects/BaseObject.h, Atlas/Objects/Encoder.h,
	  Atlas/Objects/gen_cpp.py, Atlas/Utilities/atlas_convert.cpp,
	  tests/Objects/encoder1.cpp, tests/Objects/objects2.cpp:
	  Clean up and de-virtualised encoders for performance.

2003-04-13  Al Riddoch  <alriddoch@zepler.org>

	* Atlas/Exception.h, Atlas/Exception.cpp,
	  Atlas/Message/DecoderBase.cpp, Atlas/Message/DecoderBase.h,
	  Atlas/Message/MEncoder.cpp, Atlas/Message/MEncoder.h,
	  Atlas/Net/Stream.cpp, Atlas/Net/Stream.h,
	  Atlas/Objects/BaseObject.cpp, Atlas/Objects/BaseObject.h,
	  Atlas/Objects/Encoder.h, Atlas/Objects/Encoder.cpp,
	  Atlas/Objects/GenerateDecoder.py,
	  Atlas/Objects/GenerateObjectFactory.py,
	  Atlas/Objects/objectFactory.h:
	  Take more virtual functions out of headers.

2003-04-13  Al Riddoch  <alriddoch@zepler.org>

	* Atlas/EncoderBase.h, Atlas/EncoderBase.cpp,
	  Atlas/Objects/gen_cpp.py:
	  Take virtual functions out of headers, as they can't be inlined.

	* Atlas/Codecs/Bach.cpp: Fix some botched headers.

	* Atlas/Message/MEncoder.h: Remove the hack which solved a problem
	  with overloaded methods hiding virtual methods.

	* benchmark/Message_Move.cpp, benchmark/Objects2_Move.cpp,
	  benchmark/Objects3_Move.cpp, benchmark/Objects_Move.cpp,
	  benchmark/SmartPtr_Move.cpp, benchmark/Static_Move.cpp,
	  tests/Objects/decoder1.cpp, tests/Objects/encoder1.cpp,
	  tests/Objects/objects1.cpp, tests/Objects/objects2.cpp:
	  Bring benchmark and tests headers into line.

2003-04-10  Al Riddoch  <alriddoch@zepler.org>

	* Rename src to Atlas for portability

2003-04-10  Al Riddoch  <alriddoch@zepler.org>

	* src/Codec.cpp, src/Codec.h, src/Codec_impl.h,
	  src/Negotiate.h, src/Negotiate.h, src/Codecs/Bach.h,
	  src/Codecs/Packed.h, src/Codecs/XML.h,
	  src/Net/Stream.cpp, src/Net/Stream.h,
	  src/Objects/loadDefaults.cpp, src/Utilities/atlas_convert.cpp,
	  tests/Objects/objects2.cpp: Get rid of pointless Task interface
	  and make Codec and Negotiate base classes no longer templates,
	  as it makes no difference.

2003-04-09  Al Riddoch  <alriddoch@zepler.org>

	* src/Message/MEncoder.h, src/Objects/Encoder.h: Make Encoder
	  constructors explicit for safety.

	* src/Message/Object.cpp, src/Message/Object.h: Add assignment
	  operators for all the possible types for efficiency.
	  Move long functions out of header, so they are not
	  inlined.

	* src/Objects/gen_cpp.py, src/Objects/BaseObject.cpp,
	  src/Objects/BaseObject.h: Add new method for more efficient
	  conversion of Objects into Messages.

	* src/Objects/AttributeInfo.py: Make use of more efficient
	  conversion methods.

	* Make sure the tests and benchmarks are picking up the right
	  libraries.

2003-03-22  Al Riddoch  <alriddoch@zepler.org>

	* src/Message/DecoderBase.cpp, src/Message/DecoderBase.h,
	  src/Message/QueuedDecoder.cpp, src/Message/QueuedDecoder.h,
	  src/Objects/loadDefaults.cpp, tests/Objects/encoder1.cpp:
	  Rename objectArrived methods to avoid overloading.

	* src/Objects/GenerateDecoder.py, src/Objects/gen_cpp.py,
	  src/Objects/loadDefaults.cpp, tests/Objects/decoder1.cpp,
	  tests/Objects/objects2.cpp: Remove dispatch functionality from
	  decoder, and implement it in a new class.

2003-03-16  Al Riddoch  <alriddoch@zepler.org>

	* Added pkgconfig macro, and put installed headers into a subdir.
	  Use version suffix on library names.

2002-11-30  Al Riddoch  <alriddoch@zepler.org>

	* src/Objects/GenerateDecoder.py: Rename Objects::Decoder
	  methods so no overloading.

	* tests/Objects/decoder1.cpp, tests/Objects/objects2.cpp:
	  Get the tests working again.

2002-11-30  Al Riddoch  <alriddoch@zepler.org>

	* src/Bridge.cpp, src/Bridge.h, src/EncoderBase.h,
	  src/Codecs/Bach.cpp, src/Codecs/Bach.h,
	  src/Codecs/Packed.cpp, src/Codecs/Packed.h,
	  src/Codecs/XML.cpp, src/Codecs/XML.h,
	  src/Codecs/XMLish.cpp, src/Funky/FEncoder.h,
	  src/Message/DecoderBase.cpp, src/Message/DecoderBase.h,
	  src/Message/MEncoder.cpp, src/Message/MEncoder.h,
	  src/Net/Loopback.cpp, src/Objects/AttributeInfo.py,
	  src/Objects/BaseObject.cpp, src/Objects/Encoder.h,
	  src/Utilities/atlas_convert.cpp, tests/Objects/decoder1.cpp,
	  tests/Objects/encoder1.cpp, tests/Objects/objects2.cpp,
	  tutorial/DebugBridge.h, tutorial/simple_client.cpp,
	  tutorial/example/DebugBridge.h, tutorial/example/simple_client.cpp:
	  Rename methods so overloading is not being used, to prevent
	  the problems that seems to cause with virtual functions.

2002-11-30  Al Riddoch  <alriddoch@zepler.org>

	* src/Message/MEncoder.cpp, src/Message/MEncoder.h,
	  src/Objects/BaseObject.cpp, src/Objects/BaseObject.h,
	  src/Objects/GenerateObjectFactory.py, src/Objects/gen_cpp.py
	  src/Objects/objectFactory.h, src/Utilities/atlas_convert.cpp:
	  Change argument type from Element to Element::MapType for
	  efficiency.

	* src/Message/QueuedDecoder.cpp, src/Message/QueuedDecoder.h:
	  Make method names a little more distinctive, and inline
	  the short ones.

	* src/Objects/AttributeInfo.py, src/Objects/BaseObject.cpp,
	  src/Objects/BaseObject.h: Change asObject methods to
	  asElement.

2002-11-30  Al Riddoch  <alriddoch@zepler.org>

	* src/Objects/GenerateObjectFactory.py,
	  src/Objects/GenerateDecoder.py,
	  src/Objects/AttributeInfo.py: Fix method name change in generated
	  code.

	* benchmark/timer.h, benchmark/Objects3_Move.cpp,
	  benchmark/Message_Move.cpp, benchmark/Call_Move.cpp:
	  Get the benchmarks building again.

2002-11-30  Al Riddoch  <alriddoch@zepler.org>

	* src/Objects/BaseObject.h, src/Objects/gen_cpp.py: Make class numbers
	  static.

	* src/Objects/objectFactory.h, tests/Objects/objects2.cpp: Change
	  function name to match new type names.

	* tests/Objects/objects2.cpp: Switch to using ISO C++ compliant
	  stringstream.

2002-11-29  Al Riddoch  <alriddoch@zepler.org>

	* src/Objects/GenerateDecoder.py, src/Objects/SmartPtr.h: Modify
	  decoder to use type safe conversions.

2002-11-29  Al Riddoch  <alriddoch@zepler.org>

	* tests/Objects: Get the tests compiling again.

2002-11-29  Al Riddoch  <alriddoch@zepler.org>

	* src/Objects/SmartPtr.h: Clean up constructors so member pointer is
	  directly initialised. Add type conversion template for const
	  objects. Make methods const as apropriate.

	* gen_cpp.py: Make Objects classes allocation routines return pointers
	  to their type rather than to the base class, to make writing type
	  safe code easier.

2002-11-29  Al Riddoch  <alriddoch@zepler.org>

	* src/Objects/SmartPtr.h: Added member templates for type
	  conversion up and down the tree.

2002-11-19  Al Riddoch  <alriddoch@zepler.org>

	* src/Exception.h, src/Objects/BaseObject.h,
	  src/Objects/GenerateDecoder.py, src/Objects/objectFactory.h:
	  Have the base Atlas-C++ exception class inherit from
	  std::exception. Fix destructor throw specifier.

	* src/Message/DecoderBase.h, src/Message/QueuedDecoder.cpp,
	  src/Message/QueuedDecoder.h, src/Objects/loadDefaults.cpp:
	  Pass Element::MapType to the objectArrived() method as atlas
	  requires the top level element to be a map.

	* src/Objects/objectFactory.h: Modified NoSuchFactoryException
	  so that it inherits from Atlas::Exception.

	* src/Objects/objectFactory.h, src/Objects/objectFactory.cpp,
	  src/Objects/GenerateObjectFactory.py:
	  addFactory now returns an integer which is the type value
	  which will be used to identify objects of the class
	  produced by this factory.

	* src/Objects/Decoder.h, src/Objects/Decoder.cpp,
	  src/Objects/GenerateDecoder.py:
	  Added addMethod() function to Decoder class, which allows the
	  application to register methods for custom classes using
	  the integer value returned by Factories::addFactory().

2002-11-08  Al Riddoch  <alriddoch@zepler.org>

	* src/Message/DecoderBase.cpp, src/Message/DecoderBase.h,
	  src/Message/MEncoder.cpp, src/Message/MEncoder.h,
	  src/Message/Object.h, src/Message/QueuedDecoder.cpp:
	  Rename Atlas::Message::Object to Atlas::Message::Element to
	  avoid confusion, and namespace clashes.
	  
	* src/Objects/AttributeInfo.py, src/Objects/GenerateDecoder.py,
	  src/Objects/GenerateObjectFactory.py, src/Objects/common.py,
	  src/Objects/gen_cpp.py, 
	  src/Objects/BaseObject.cpp, src/Objects/BaseObject.h,
	  src/Objects/Encoder.h, src/Objects/loadDefaults.cpp,
	  src/Objects/objectFactory.h, src/Utilities/atlas_convert.cpp:
	  Update the Objects API to use the new Message class.

	* configure.in, tests/Objects/Makefile.am:
	  Fix handling of compression libs by filters.

	* tests/Objects/decoder1.cpp, tests/Objects/encoder1.cpp,
	  tests/Objects/objects1.cpp, tests/Objects/objects2.cpp,
	  tutorial/DebugBridge.h:
	  Update tests so they build again.

2002-06-20  Al Riddoch  <alriddoch@zepler.org>

	* src/Codecs/Bach.cpp, src/Message/DecoderBase.cpp,
	  src/Utilities/atlas_convert.cpp: Strict ISO C++ fixes.

2002-06-05  Michael Koch  <konqueror@gmx.de>

	* src/Codecs/Bach.*: fix allowed characters for names

2002-06-01  AIR-IX SUUNNITTELU/Ahiplan Oy  <aloril@iki.fi>

	* src/Objects/common.py, gen_cpp.py: both Python 1.5.* and Python 2.*
	  supported

2002-05-21  Michael Koch  <konqueror@gmx.de>

	* configure.in: fixed --enable-debug

2002-05-19  Al Riddoch  <alriddoch@zepler.org>

	* src/Objects/common.py: Back off to supporting older more common
	  versions of python.

	* src/Codecs/Bach.cpp, src/Codecs/Packed.cpp, src/Codecs/XML.cpp,
	  src/Net/Stream.cpp:
	  Work around the problem that in_avail() sometimes returns < 0 on
	  some systems.

2002-05-18  Michael Koch  <konqueror@gmx.de>

	* all Makefile.am: 
	  fixes for builddir != srcdir

2002-05-17  Michael Koch  <konqueror@gmx.de>

        * atlas-config.in:
	  - dont output /usr/lib when called with --libs
	  - return real version instean of the string @ATLAS_VERSION@

2002-05-15  Michael Koch  <konqueror@gmx.de>

        * atlas-config.in: dont output /usr/include when called with --cflags

2002-05-15  Michael Koch  <konqueror@gmx.de>

	* src/Bridge.h: added documentation.

2002-05-14  Michael Koch  <konqueror@gmx.de>

	* src/Codecs: fixed encodeString

2002-05-14  Michael Koch  <konqueror@gmx.de>

	* src/Makefile.am: added Atlas.h
	* src/Objects/BaseObject.h: remove debugging code

2002-05-14  Michael Koch  <konqueror@gmx.de>

        * src/Objects/SmartPtr.h:
	  removed DEBUG code: it doesnt compiles and aloril
	  said its not needed.
	* configure.in: added --enable-debug
	  by default debugging is disabled
	* src/Atlas.h:
	  new file for gobal definitions
	  currently used for the definition of ATLAS_DEBUG
	* src/Codecs/Bach.cpp,
	  src/Bindings/Python/wrapperObject.cpp:
	  use ATLAS_DEBUG macro
	* src/Message/DecoderBase.cpp:
	  added some asserts
	  use ATLAS_DEBUG macro

2002-05-13  Michael Koch  <konqueror@gmx.de>

	* src/*, configure.in:
	  added Bach Codec officially to Atlas-C++
	
2002-05-12  Michael Koch  <konqueror@gmx.de>

	* adjusted all member variables to use the prefix m_

2002-05-12  Michael Koch  <konqueror@gmx.de>

	* src/Utititlies/*:
	  Added new utility to convert ATLAS files using another codec.

	  This doesnt get compiled currently.

2002-05-10  Michael Koch  <konqueror@gmx.de>

	* src/Codecs/Bach.cpp/h:
	  New class implementing the BACH codec.

2002-05-07  Michael Koch  <konqueror@gmx.de>

	* src/Objects/common.py, src/Objects/gen_cpp.py:
	  Use latest API from Atlas-Python

2002-11-04  Al Riddoch  <alriddoch@zepler.org>

	* src/Filter.h, src/Funky/FEncoder.cpp, src/Funky/FEncoder.h,
	  src/Message/MEncoder.cpp, src/Message/MEncoder.h,
	  src/Objects/BaseObject.cpp, src/Objects/BaseObject.h:
	  Rename Encoder.* files so that IDE's don't get confused by
	  the duplicate object file names.

	* src/Objects/common.py: Default to recent python version.
	  Users of older versions of python may have to hack this file.

2001-10-07  Al Riddoch  <alriddoch@zepler.org>

This entry covers the changes made by Jesse Jones for which no ChangeLog
entries were commited. It also includes further changes made by myself.

	* src/Objects/BaseObject.cpp: Re-ordered includes.

	* src/Objects/BaseObject.h: Added include to ensure header is stand
	  alone. Make accessor method const.  Make sure non-callable
	  function returns something when asserts are not compiled in.

	* src/Bridge.h: Fixed malformed declarations for mapBegin and
	  listBegin.

	* src/Codec.cpp, src/Objects/loadDefaults.cpp: Re-ordered includes to
	  ensure that respective headers are stand alone.

	* src/Net/Stream.cpp: Re-ordered includes to ensure that header is
	  stand alone. Made some functions static. Removed invalid default
	  arguements as these belong in the headers. Removed stage style
	  TODO as these are not used in the Atlas-C++ code. Added some
	  casts.

	* src/Codecs/XML.cpp: Added some casts.

	* src/Message/Encoder.h: Added a bunch of inherited methods to
	  prevent them from being hidden by the new overloaded methods.
	  Removed confusing "Inherited" typedef. Re-styled inherited
	  methods.

	* src/Exception.h: Fixed misspelled "UNKNOW". Made getDescription a
	  const method.

	* src/Filter.h: Removed an extra comma from the Type declaration.
	  Added some casts. Moved inline virtual methods to cpp file.

	* src/Filter.cpp: Added virtual filterbuf methods from header file.

	* src/Negotiate.h: Removed an extra comma from the declaration.

	* src/Message/Layer.h: Removed duplicate constructor.

	* src/Codecs/Packed.cpp, src/Codecs/Utility.h: Added a cast.

	* src/Codecs/Packed.h: Removed a comma from the declaration.

	* src/Codecs/XML.h: Removed commas from declarations.

	* src/Net/Stream.h: Forward references Bridge so header stands alone.

2001-10-02  Al Riddoch  <alriddoch@zepler.org>

	* Cleaned up some unnecessary includes.

	* src/Net/Stream.cpp: Re-wrote client greeting code so it is more
          efficient, as described by Damien McGinnes.

2001-07-17  Al Riddoch  <alriddoch@zepler.org>

	* src/Exception.h: Added exception base class, with string
	  description.

	* src/Objects/loadDefaults.h, src/Objects/BaseObject.h,
	  src/Message/Object.h: Modify exception classes to derive from
	  exception base class.

	* src/Objects/loadDefaults.cpp, src/Objects/BaseObject.cpp: Re-style
	  code for consistancy and readability.

	* src/Message/Object.h: Added feature to Message::Object so it
	  can store pointers properlly.

	* src/Objects/GenerateObjectFactory.py: Make generated code ISO
	  conformant, and more readable.

	* src/Objects/common.py: Updated copyright date for generated files.

2001-07-15  Al Riddoch  <alriddoch@zepler.org>

	* Added interface and library versioning.

2001-07-15  Al Riddoch  <alriddoch@zepler.org>

	* src/Net/Stream.cpp, src/Objects/BaseObject.cpp,
	  src/Objects/loadDefaults.cpp: Fixed code for strict ISO
	  conformance; mainly strict use of std:: namespace.

2001-07-15  Al Riddoch  <alriddoch@zepler.org>

	* src/Message/Object.h, src/Message/Object.cpp: Removed buggy and
	  largely unused memory pool code.

	* src/Objects/loadDefaults.cpp: Removed double use of find()
	  method, and re-styled code to fit in with the rest of Atlas-C++.

	* src/Net/Stream.cpp: Switched negotiation code over to picking
	  Packed by default.

	* src/Filters/Bzip2.cpp: Modified code to use latest Bzip2 API.

	* src/Codecs/Packed.cpp: Fixed beginning and ending of stream,
	  which does not have an encoding in Packed.

	* NEWS, HACKING: updated.

2001-05-06  Al Riddoch  <alriddoch@zepler.org>

        * src/Message/Object.cpp: Added true cpp file so that class static
          member is handled cleanly.

        * src/Message/Object.h: Moved clear and operator new/delete()
          functions around so they can be inlined.

        * src/Net/Stream.cc: Added ATLAS to greeting message as required
          by the Atlas protocol.

        * src/Net/Stream.*: Made header in NegotiateHelper pass by reference.

2001-03-22  Al Riddoch  <alriddoch@zepler.org>

        * configure.in: Changed package name to Atlas-C++ to ensure it
	  is distinguishable from the other versions.

	* configure.in: Added rule to make atlas-config script.

2001-03-14  Al Riddoch  <alriddoch@zepler.org>

	* src/Codecs/Makefile.am: Install Codec header files, so codecs can
	  be used directly.

	* src/Codecs/*.cpp: Removed default value for can_read parameter from
	  definition as it is only required in declaration.

	* Added some std:: prefixes as required.

2001-03-12  Al Riddoch  <alriddoch@zepler.org>

	* Updated ROADMAP and NEWS to latest versions from stable branch.

	* Modified docs to indicate new maintainer.

2001-03-10  Al Riddoch  <alriddoch@zepler.org>

	* src/Codec.*, src/Codecs/*: Ported across simplified ISO compliant
	  Codec classes from stable branch. Removed Metrics and Parameters.
	  
	* src/Filter.*, src/Filters/*: Removed Metrics and Parameters.

	* src/Factory.*: Removed Factory mechanism, changes copied from
	  stable branch.

	* src/Net/Stream.*: Changed negotiation classes to simplified but
	  ISO compliant version from stable branch, with placeholder
	  code for Filter negotiation.

	* HACKING: Copied across from stable branch, and modified to reflect
	  status of this branch.

	* README: Updated contents from the stable branch.

	* tutorial/example/*: Created similar tutorial to that on stable
	  branch. The only differences are differences to the API.

	* src/Filter.h, Makefile.am: Sorted out using config.h in Filter.h.

	* src/Filters/*: Moved filters into their own namespace,
	  in accordance with the convention used throughout this
	  library.

	* src/*: Removed all "using namespace .." directives.

2001-03-08  Al Riddoch  <alriddoch@zepler.org>

	* src/*: Removed "using namespace std;" throughout code, as all
	  uses of symbols in this namespace are now fully qualified.

2001-03-07  Al Riddoch  <alriddoch@zepler.org>

	* src/*: Backed off changes to namespaces and template classes with
	  Stream parameter, as they proved to be of no benefit to portability.

	* src/*: Finished off a bit more ISO conformance. (all std:: additions).

	* src/Message/Object.h: Copied changes from stable branch
	  including memory pool optimisation, asNum() and isNum() methods, and
	  change of ListType from std::list to std::vector.

	* src/*: Replaced int with long throughout code for compatability
	  with changes type in Message::Object

2001-01-05  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/Filter.h: added filterbuf. Input filtering is not
	    implemented yet.
	* configure.am: added check for <streambuf>. You will need an
	    automike with a C++ check for this.
	* configure.in: regenerated from new configure.am.
	* TODO: updated todo list.
	* src/Net/Stream.h: identified a problem. Look for XXX.

2001-01-04  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/*: made everything ISO C++ conforming, from what I can see
	    (mainly a great number of std:: additions).

2000-12-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Removed dependency on socket++ in test programs.

	* Added atlas.m4 autoconf macro script.

2000-12-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Split filters into header and cpp file in the same model
	  as Codecs.

	* Re-worked tutorial, test and benchmarks so they compile without
	  installing the library.

2000-12-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Removed hierarchical namespaces, leaving single flat Atlas
	  namespace.

	* Reduced template usage, especially removing all Stream
	  templates.

	* Split codecs into header and cpp file, and removed static Codec
	  instances.

	* Re-worked factories() static member function in Factory
	  so it now uses portable static list pointer instead of static
	  list.

2000-12-19  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Added atlas-config script.

2000-12-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Added first attempt at a UML class diagram.

2000-12-09  Aloril  <aloril@iki.fi>

	* added bool instanceOf(int classNo) const; method

2000-12-08  Aloril  <aloril@iki.fi>

	* Decoder::unknownObjectArrived(const Entity::Empty&); ->
	Decoder::objectArrived(const Entity::Anonymous&);

	* s/Empty/Anonymous/

	* added Atlas::Objects::Entity::Empty class which is used when
 	unknown object has arrived (usually unknown objects have pos
 	attribute, which is dynamic in Root):
	Decoder::unknownObjectArrived(const Entity::Empty&);
	and for args: if(op->getArgs()[0]->getClassNo() == Entity::EMPTY_NO) ...

2000-12-02  Aloril  <aloril@iki.fi>

	* changed method names: FooMethod -> fooMethod

	* optimized src/Objects: now few hundred times faster than earlier

2000-11-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Removed .cc files

2000-11-09  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Renamed all cc files to cpp for Visual studio. Old .cc files still
	  remain. Will be removed once we are sure this is stable.
	
2000-11-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Fixed negotiation so it is now possible for packed to get picked.
	  (Packed decoder appears to segfault though)
	
