2003-07-24  Al Riddoch  <alriddoch@zepler.org>

	* tests/testTerrain.cpp: Add unit test for terrain class.

2003-07-24  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Terrain.h: Add storage and accessors for shaders.

2003-07-21  Al Riddoch  <alriddoch@zepler.org>

	* Tweak configure.in to be a little more compatable with older
	  autoconf.

2003-07-21  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.h: Add accessor for the size member.

	* Mercator/Buffer.h, Mercator/Buffer.cpp, Mercator/Surface.h,
	  Mercator/Surface.cpp: Make a base class for handling
	  float buffers for vertex, texture coord and colour data.
	  Use it as the basis for Surface.

	* Mercator/Shader.h, Mercator/Shader.cpp: Place holder for shaders
	  which implement rules creating a surface from the segment height
	  data according to a rule.

2003-07-21  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.cpp: Free the float buffers using the correct
	  array delete operator.

2003-07-21  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.h, Mercator/Segment.cpp: Allocate point data on the
	  fly.  Use m_res and m_size in the terrain population functions rather
	  than recalculating, or passing values.

2003-07-20  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Surface.h, Mercator/Surface.cpp: Make surface class a little
	  more flexible by paramaterising the number of channels.

	* Mercator/Segment.h, Mercator/Segment.cpp: Add convenience membe
	  m_size which is m_res + 1, so we don't have to keep doing that
	  calculation.

2003-07-06  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.h: Re-name getSize() to getResolution()

	* Mercator/Surface.h, Mercator/Surface.cpp: Store a reference to the
	  the segment this is a layer of, and add an enumeration for indicating
	  the orientation of the texturing on this layer.

2003-07-06  Al Riddoch  <alriddoch@zepler.org>

	* Clean up configure.in a bit.

2003-07-05 Damien McGinnes
        
	* Mercator/TerrainMod.h: added a CraterTerrainMod that subtracts a 
	  sphere from the terrain.

2003-07-03  Al Riddoch  <alriddoch@zepler.org>

	* Update rpm spec to be cleaner, and make the technical sections
	  more generic.

2003-07-03  Al Riddoch  <alriddoch@zepler.org>

	* Remove legacy mercator-config script and m4 macro, as we
	  don't want people using them.

2003-06-27 Damien McGinnes
        
	* Mercator/Terrain.cpp, Terrain.h: made addMod take a const ref 
	  to a terrain mod (bit cleaner)
	* Mercator/TerrainMod.h: made clone methods const

2003-06-26 Damien McGinnes
        
	* Mercator/Segment.cpp, Segment.h: Added the location of the
	  segment. Changed applyMod to work with mods in absolute coords
	* Mercator/Terrain.cpp, Terrain.h: added addMod to apply mods to 
	  the terrain - this allows a mod to span several segments
	* Mercator/TerrainMod.h: added a clone method, fixed the virtual
	  keyword on a few methods, disabled copy constructors

2003-06-23  Al Riddoch  <alriddoch@zepler.org>

	* Fix Makefile.ams so that distcheck works.

	* tests/main.cpp: Fix tests to work with recent API changes.

2003-06-22  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Mercator.h, Mercator/Segment.cpp, Mercator/Segment.h,
	  Mercator/Terrain.cpp, Mercator/Terrain.h: Clean up the
	  way the default segment resolution and size is handled.

	* Mercator/Surface.cpp, Mercator/Surface.h: Framework for
	  class representation texture layers on the terrain.

2003-06-22  Al Riddoch  <alriddoch@zepler.org>

	* Updated copyright statements to include Damien a bit more.

2003-06-22  Damien McGinnes

	* Mercator/Segment.cpp: fixed an error in the clip code (x and y 
	  were switched)
        
2003-06-22  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.h: Make invalidate() private.

	* Mercator/Terrain.cpp, Mercator/Terrain.h: Fix bugs in revised
	  setBasePoint. Remove obsolete methods, and simply to one
	  getSegment call, as two are no longer required. Add destructor.

2003-06-21  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.cpp, Mercator/Segment.h: Store control
	  points in the segment object, so it can be re-populated.

	* Mercator/Terrain.cpp, Mercator/Terrain.h: Manage the creation of
	  new Segment objects when inserting new base points, and handle
	  invalidation at this point too. getSegmentSafe is now deprecated.
	  Untested.

	* tests/main.cpp: Update tests for API change, and clean up output.

2003-06-21  Damien McGinnes

	* Mercator/Terrain.cpp: 
	  - fixed a bug in invalidatePoint (i, j), not (x,y)
	  - removed the erase line in invalidateSegment (mem leak, and loses
	    mods to the segment)
	  - fixed one of the loop limits in refresh

2003-06-20  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Matrix.cpp: Add template instantiations, which I assume
	  was the effect intended by the previous code.

	* Mercator/Terrain.h, Mercator/Terrain.cpp:
	  Re-work segment invalidation code. operator[] should never
	  be used to test for a key in an STL map.

	* Mercator/Segment.cpp, Mercator/Segment.h, Mercator/TerrainMod.h:
	  Fix comment and code formatting.

2003-06-20  Damien McGinnes

	* Mercator/Terrain.cpp: changed invalidate and getSegmentSafe to use
	  the validity flags
	* tests/main.cpp: did a 30 second test of the above code
        
2003-06-20  Damien McGinnes

	* Mercator/Segment.cpp: added validity flags for points and normals,
	  and fixed up a few code alignment probs
	* Mercator/Terrain.h: started to change invalidate. (commented out
	  right now)
	  Need to modify getSegmentSafe to use the validity flags and only
	  create a new segment when one is not already there.

2003-06-19  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Terrain.h: Add support for legacy interface.

2003-06-19  Al Riddoch  <alriddoch@zepler.org>

	* tests/main.cpp: Move the test prog out of the main code.

	* Mercator/BasePoint.h: Re-work BasePoint class to be more inline
	  with the main style.

	* Mercator/Segment.cpp: Fix up the code to use the new BasePoint
	  style.

2003-06-15 Damien McGinnes

	* new BasePoint.h replaces floats for basepoints
	* Mercator/Segment.cpp : variable roughness implemented
	* added a basic test file - doesnt do much

2003-06-09 Damien McGinnes

	* Mercator/Segment.cpp : modified the normals, this time hopefully so
	  they will work

2003-06-09 Damien McGinnes

	* Mercator/Segment.cpp : modified the normal array to be same size as
	  the heights array. bottom and right boundaries are a bit of a hack

2003-06-09 Damien McGinnes

	* Mercator/Segment.cpp : added in an attempt at values for the normal
	  array. Array is one row and column smaller than the height array.
 
2003-06-08  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.h, Mercator/Segment.cpp: Tidy up some code,
	  and add the beginnings of the normal calculation code.

2003-06-08  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Terrain.h, Mercator/Terrain.cpp: Get rid of the passing
	  over extra surrounding basepoints into Segment::populate.

	* Mercator/Segment.h, Mercator/Segment.cpp: No longer require
	  surrounding basepoints when doing qRMD. Add API and stubs for
	  storing an entire array of normals. Segment::populateNormals()
	  currently just allocates the array of normals. It does nothing
	  else.

2003-06-06 Damien McGinnes

	* TerrainMod.h: fixed where I called Center() instead of getCenter()

2003-06-06 Damien McGinnes

	* TerrainMod.h : added. Defines modifiers for the terrain.
	* Segment.h/Segment.cpp : modified to use TerrainMod objects, stored
	  in a list, applied in order during populate
	* removed Segment_impl.h refactored out.

2003-06-03  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment_impl.h Mercator/Segment.cpp: Fix problem
	  with wfmath template instances, and clean up code.

2003-06-03 Damien McGinnes

	* Segment.cpp Segment.h Segment_impl.h: started work on modification
	  of terrain. Still got a problem that the Contains call in
	  Segment_impl.h doesnt work (link error)

2003-05-24 Damien McGinnes

	* Mercator/Segment.h Mercator/Segment.cpp: Cleaned up Segment, removed
	  tile.cpp and tile.h and moved them into Segment
	* TODO: added some ideas
	* AUTHORS: added some authors
	* added getHeightAndNormal to segment
	* addded some test code for modifying terrain to segment

2003-05-14  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.h, Mercator/Segment.cpp: Add a destructor so
	  we can free the vertex storage.

2003-04-25  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Segment.cpp, Mercator/Segment.h:
	  Initialise min and max properly, and make their accessors const.

2003-04-25  Damien McGinnes

	* Mercator/tile.cpp,h: Added min and max calcs
	* Mercator/Segment.cpp,h: added accessors for min and max

2003-04-19  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Terrain.h: Add accessor for resolution variable.

2003-04-17  Al Riddoch  <alriddoch@zepler.org>

	* Mercator/Matrix.cpp, Mercator/Segment.cpp, Mercator/Segment.h,
	  Mercator/Terrain.cpp: Move source into Mercator subdir
	  for portability.

2003-03-31 Damien McGinnes

	* src/tile.cpp: modified algorithm, cleaned up code slightly
	  algorithm now generates 1 tile very quickly, but has problems
	  on steep tiles where one side is quite flat. (seams are more
	  visible).

2003-03-29  Al Riddoch  <alriddoch@zepler.org>

	* src/tile.cpp: Tweak tile() to create a size+1 * size+1 segment.

	* src/Segment.cpp: Switch to using damien's algorithm for
	  testing.

2003-03-28  Al Riddoch  <alriddoch@zepler.org>

	* src/Matrix.h, src/Matrix.cpp: Add matrix class for handling
	  basepoints.

	* src/tile.h, src/tile.cpp: damiens experimental qRMD implementation.

	* src/Terrain.h, src/Terrain.cpp, src/Segment.cpp: Use Matrix to
	  handle basepoints.

	* src/Segment.cpp: Use memcpy to make copying rows more efficient.

2003-03-19  Al Riddoch  <alriddoch@zepler.org>

	* src/Terrain.h, src/Terrain.cpp: Make value for missing points the
	  the average of surrounding points that are present. Makes edges
	  of know terrain more sane.

2003-03-19  Al Riddoch  <alriddoch@zepler.org>

	* src/Terrain.cpp: Back off change to default height points to make
	  terrain seamless again.

2003-02-23  Al Riddoch  <alriddoch@zepler.org>

	* src/Terrain.cpp: Make default height points work more sanely.

2003-02-23  Al Riddoch  <alriddoch@zepler.org>

	* src/Terrain.cpp: Make refreshing work more sanely.

2003-02-21  Al Riddoch  <alriddoch@zepler.org>

	* src/Terrain.h: Add accessor for point store.

2003-02-17  Al Riddoch  <alriddoch@zepler.org>

	* src/Segment.h, src/Segment.cpp: Add a row and column of extra
	  heightpoints to the segment to make it easier to render.

2003-01-31  Al Riddoch  <alriddoch@zepler.org>

	* Convert to using pkg-config

2003-01-28  Al Riddoch  <alriddoch@zepler.org>

	* src/Segment.cpp, src/Segment.h: Fully implement qRMD with roughness
	  and falloff.

2003-01-28  Al Riddoch  <alriddoch@zepler.org>

	* src/Segment.cpp, src/Segment.h: First stab at qRMD algorithm.

2003-01-28  Al Riddoch  <alriddoch@zepler.org>

	* src/Terrain.cpp: Fix segment dependencies.

2003-01-28  Al Riddoch  <alriddoch@zepler.org>

	* src/Segment.cpp, src/Segment.h, src/Terrain.cpp: Implement
	  midpoint based terrain algorithm, currently without any
	  displacement.

2003-01-20  Al Riddoch  <alriddoch@zepler.org>

	* src/Segment.cpp, src/Segment.h, src/Terrain.cpp, src/Terrain.h:
	  Switch to using floats instead of doubles internally for performance.

2003-01-19  Al Riddoch  <alriddoch@zepler.org>

	* src/Segment.h, src/Segment.cpp: Add class for terrain segment, which
	  currently contains an interpolated sloped area.

	* src/Terrain.h, src/Terrain.cpp: Add functionality required to manage
	  segments in the terrain.
