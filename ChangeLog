Tuesday, April 9, 2002		Ron Steinke <rsteinke@w-link.net>

	* Continued work on MSVC++ workarounds

Tuesday, April 9, 2002		Ron Steinke <rsteinke@w-link.net>

	* Started adding workarounds to compile with MSVC++
	* Started adding doxygen docs

Friday, March 24, 2002		Ron Steinke <rsteinke@w-link.net>

	* Tweaked the syntax of the new Parallel() function slightly

Thursday, March 23, 2002	Ron Steinke <rsteinke@w-link.net>

	* Finished Intersect(Polygon, Polygon). Now I've just got to
	  test all those intersection functions
	* Added Parallel() and Perpendicular() functions to compare the
	  orientation of two vectors
	* Incremented version number to 0.2.6

Tuesday, March 23, 2002		Ron Steinke <rsteinke@w-link.net>

	* Fixed bug with declaring the default value of the "proper"
	  argument of the intersection functions twice
	* Moved the function definitions for intersection-oriented
	  members of _Poly2Orient from polygon_funcs.h into
	  polygon_intersect.h
	* Wrote definitions for Contains(Polygon, AxisBox),
	  Contains(Polygon, RotBox), and Contains(Polygon, Polygon).
	  Got most of Intersect(Polygon, Polygon) done, except
	  for the case where the two planes containing the polygons
	  intersect in a line (the standard case in 3d)

Thursday, March 21, 2002	Ron Steinke <rsteinke@w-link.net>

	* Fixed Polygon<> intersection functions with AxisBox<> and
	  RotBox<> in polygon_intersect.h
	* Replaced separate Intersect() and IntersectProper() functions
	  with a "bool proper" argument to Intersect(), did the same
	  for Contains(). For backwards compatibility, make the "proper"
	  argument default to false, and wrote generic IntersectProper()
	  and ContainsProper() templates to call Intersect() and Contains()
	  with proper = true (keep them? deprecate them? which API is better?).

Tuesday, March 12, 2002		Ron Steinke <rsteinke@w-link.net>

	* Added a default value of 1.0 for the norm in Vector::normalize()
	* Added a virtual destructor to the exception defined in atlasconv.h
	* Fixed a terminate-the-loop-proberly bug in probability.cpp
	  (replaced DBL_MIN by DBL_EPSILON)
	* Got test functions to compile with gcc-3.0

Saturday, March 9, 2002		Dan Tomalesky <grim@xynesis.com>

    * Added acinclude.m4 for atlas so people without atlas can still
      autogen.sh and configure will give warning instead of getting
      bizarre macro missing error for atlas when atlas is not installed

Thursday, March 7, 2002		Ron Steinke <rsteinke@w-link.net>

	* Fixed error in configure check for sstream vs. strstream

Wednesday, March 6, 2002	Ron Steinke <rsteinke@w-link.net>

	* Merged in Grimicus' patch to add wfmath-config

Wednesday, March 6, 2002	Ron Steinke <rsteinke@w-link.net>

	* Redid sstream vs. strstream compatibility code

Wednesday, March 6, 2002	Ron Steinke <rsteinke@w-link.net>

	* Got rid of stupid "set fail bit" on parse errors for
	  operator>>(), it now throws instead
	* Added configure check for sstream vs. strstream,
	  compatibility code

Monday, March 04, 2002	Al Riddoch <alriddoch@zepler.org>

	* wfmath/error.h: Added destructor with throw(); to exception class.

	* wfmath/polygon.h: Removed trailing comma from enumeration.

	* wfmath/polygon.h, wfmath/stream.h: Fixed std:: namespace issues,
	  and made typenames explicit.

Wednesday, February 27, 2002	Ron Steinke <rsteinke@w-link.net>

	* Commented out horribly broken intersection functions
	  with AxisBox and RotBox in polygon_intersect.h

Wednesday, February 27, 2002	Ron Steinke <rsteinke@w-link.net>

	* Autogen.sh cleanups

Tuesday, February 26, 2002	Ron Steinke <rsteinke@w-link.net>

	* Bump version number to 0.2.5, so we can have an official
	  version needed by the stage patches.

Monday, February 25, 2002	Ron Steinke <rsteinke@w-link.net>

	* Added rotation() functions to RotMatrix<3> and Quaternion
	  which take a single Vector<3> as argument (as opposed to
	  a vector for the rotation axis and an angle), and determine
	  the rotation angle from the length of the vector. This
	  is nice for things like the rotation generated by
	  (angular velocity) * dT, since it handles the zero-length
	  axis case cleanly, and avoids an extra call to sqrt().
	* Fixed an error in atlasconv.h, where specializations
	  of AxisBox<>::fromAtlas() to particular dimensions
	  weren't marked as inline

Friday, February 22, 2002	Ron Steinke <rsteinke@w-link.net>

	* Broke the Polygon<> intersection functions out of
	  polygon_funcs.h and polygon.cpp into the separate
	  files polygon_intersect.h and polygon_intersect.cpp 
	* Moved the implementations of the boundingBox() and
	  boundingSphere() functions in Point out of point_funcs.h
	  into axisbox_funcs.h and ball_funcs.h. This lets me
	  remove the include dependence of Point on AxisBox and Ball.
	* Fixed up list of files included in wfmath.h. It now
	  includes everything but atlasconv.h, which is intentionally
	  excluded.

Wednesday, February 20, 2002	Ron Steinke <rsteinke@w-link.net>

	* Fixed RotBox to match the new sense of RotMatrix<>
	  rotation, still need to look at its interaction
	  with Polygon<> to get that right
	* Wrote Intersect(RotBox, AxisBox) for 2d, 3d
	* Removed a needless <iostream> dependency from atlasconv.h
	* Bump version number to 0.2.4

Sunday, February 17, 2002	Ron Steinke <rsteinke@w-link.net>

	* Some doc fixes
	* Added a #warning about using the Polygon<> Intersect()
	  and Contains() functions

Thursday, February 14, 2002	Ron Steinke <rsteinke@w-link.net>

	* Missed a change in rotation sense in Vector<3>::rotate(const Quaterion&),
	  fixed now

Thursday, February 14, 2002	Ron Steinke <rsteinke@w-link.net>

	* Added comments to many assert()'s
	* Switched the sense of rotation in RotMatrix<> and Quaternion
	  to be compatible with OpenGL and the rest of Worldforge. Also
	  used this as an excuse to scrap all the Euler angle stuff,
	  since: 1) with different axis conventions floating around, it's
	  very confusing, and 2) I have yet to see someone try to use
	  it in the case where it is the correct solution

Tuesday, February 12, 2002	Ron Steinke <rsteinke@w-link.net>

	* Changed Point<>:origin() to Point<>::setToOrigin()
	* Added assert() checks on array indices passed to
	  many functions

Tuesday, February 12, 2002	Ron Steinke <rsteinke@w-link.net>

	* Added Equal() template to call foo->isEqualTo().
	* Replaced "const CoordType&" with CoordType everywhere it
	  was used.
	* Got rid of scaleEpsilon member function in Point<> in favor
	  of calling _ScaleEpsilon directly, minimized use of
	  _scaleEpsilon member function in Vector<>
	* Improved efficiency of some member functions in Segment<>
	* Got rid of <iostream> in wrapped_array.h, got rid of
	  MINIBALL_NO_STD_NAMESPACE test on whether to include
	  <list> or <list.h> and <cassert> or <assert.h> (since
	  we're including them as <list> and <assert.h> elsewhere),
	  got rid of miniball_config.h

Friday, February 1, 2002	Ron Steinke <rsteinke@w-link.net>

	* Changed IsFloatEqual() to Equal(), removed FloatAdd()
	  and FloatSubtract(), vastly improved precision checks
	  for round-off error. The intersection functions still
	  need to be audited to make sure they're handling it
	  right.
	* API change, increment version to 0.2.3

Monday, January 28, 2002	Ron Steinke <rsteinke@w-link.net>

	* Cleanups to const.h, const.cpp suggested by Jesse Jones
	  in the code review, and associated repurcussions to the
	  rest of the codebase.

Friday, January 25, 2002	Ron Steinke <rsteinke@w-link.net>

	* Some efficiency improvements and generalizations to the
	  backend of the probability functions
	* Wrote Polygon<3> intersections with AxisBox<3> and RotBox<3>

Thursday, January 24, 2002	Ron Steinke <rsteinke@w-link.net>

	* Karsten's Makefile.am fixes for srcdir != builddir
	* New probability distribution functions, Gaussian
	  and Poisson distributions
	* Increment version to 0.2.2

Tuesday, January 22, 2002	Ron Steinke <rsteinke@w-link.net>

	* Changed namespace from WF::Math to WFMath
	* Changed fromAtlas() to throw an exception instead of
	  returning bool, added constructors from Atlas::Message::Object
	  to appropriate types
	* Incremented version number to 0.2.1, since there were API changes
	  and other people are starting to care about dependencies on this
	  library; there'll probably be a lot of 0.2 versions

Tuesday, January 22, 2002	Ron Steinke <rsteinke@w-link.net>

	* Changed the atlas functions for Quaternion and AxisBox<>
	  to conform to atlas specs, got rid of atlas functions which
	  still used string conversion
	* Fixed Contains(Polygon<2>, Segment<2>) and
	  Contains(Polygon<2>, Polygon<2>) for endpoint intersection;
	  commented out Intersect(RotBox<>, AxisBox<>) and
	  IntersectProper(RotBox<>, AxisBox<>) because I'm
	  pretty sure the algorithm's wrong
	* Added another rotation() function to RotMatrix<>, this
	  one constructs the rotation necessary to rotate one vector
	  into another
	* Got versioning on library build working correctly
	* Changed version to 0.2.0, implementation of remaining
	  Polygon<> intersection routines delayed until a later version

Sunday, January 20, 2002	Ron Steinke <rsteinke@w-link.net>

	* Wrote all the Polygon<2> intersection functions, and
	  about half of the general Polygon<> intersection functions;
	  a few of the 2d functions still need more work
	* Changed intersect_test back to shape_test; decided one
	  test program was sufficient for all of AxisBox<>, Ball<>,
	  Segment<>, and RotBox<>
	* Wrote test code for Polygon<> to call the generic tests;
	  added the generic tests to shape_test; wrote fairly complete
	  test code for Quaternion
	* Changed from FromAtlas() and ToAtlas() functions to fromAtlas()
	  and toAtlas() member functions; changed Vector<> and Point<>
	  from sending string objects to atlas to sending lists, so
	  we're more compatible with the getPos() and getVelocity()
	  methods of Atlas::Objects::Entity::RootEntityData
	* Upped version number to 0.1.9. The library now implements
	  the functionality in stage/math, plus the mathematical
	  parts of coal and eris. Will go to 0.2 when the polygon
	  intersect functions are done, and the unit tests are
	  more complete

Tuesday, January 15, 2002	Ron Steinke <rsteinke@w-link.net>

	* Cleaned up Euler angle stuff in RotMatrix<> and Quaternion,
	  changed everything to z-y-z convention
	* Moved template specialization declarations from vector.h
	  to vector_funcs.h
	* Made Vector<> and Point<> mathematical operators all friends
	  instead of members, to allow friendship for mathematical
	  operators which take mixed types

Friday, January 11, 2002	Ron Steinke <rsteinke@w-link.net>

	* Added Quaternion class, based on code from eris
	* Renamed matrix.h, matrix_funcs.h, matrix.cpp, matrix_test.cpp
	  to rotmatrix.h, rotmatrix_funcs.h, rotmatrix.cpp, rotmatrix_test.cpp;
	  this matches the name of the class, and it's best to have the
	  matrix.h slot available in case we need it later. Need to do
	  this now before everyone starts using the library

Wednesday, January 9, 2002	Ron Steinke <rsteinke@w-link.net>

	* Added BoundingBox(), BoundingSphere() functions for a
	  container of points. The BoundingSphere() function
	  uses the (GPL'd) miniball code of Bernd Gaertner
	  <http://www.inf.ethz.ch/personal/gaertner>
	* Moved the implementations of operator<<() and operator>>()
	  for Polygon<2> out of stream.h and into stream.cpp, fixing
	  a linker error for any file which included stream.h (oops).

Wednesday, January 9, 2002	Ron Steinke <rsteinke@w-link.net>

	* Started on Polygon<> class
	* Wrote some test functions for the generic
	  part of the class interface (operator=(), isEqualTo(), etc.)
	  and the generic shape interface (getCorner(), boundingBox(), etc.)
	* Added Midpoint() function in point.h
	* Cleaned up operator<() to check !IsFloatEqual()
	  when comparing variables of type CoordType
	* Added autogen.sh

Friday, January 4, 2002		Ron Steinke <rsteinke@w-link.net>

	* Got atlas_test working

Thursday, January 3, 2002	Ron Steinke <rsteinke@w-link.net>

	* Changed Barycenter() to take a container of Point<>
	  instead of an array, added BoundingBox() for a
	  container of AxisBox<>
	* Optimized special cases in AxisBox::getCorner() and
	  RotBox::getCorner(), got rid of AxisBox::lowCorner()
	  and AxisBox::highCorner()
	* Extended RotMatrix<> to allow for mirror image flips
	  in addition to rotations, added mirror() functions to
	  both RotMatrix<> and Vector<>
	* Removed foolish const from return value of
	  RotMatrix<>::rotation()
	* Wrote better member accessors for most shapes (there's
	  no reason not to have direct access to the members in
	  anything but AxisBox<>)
	* Inlined some of the simpler class member functions
	* Moved atlasconv.h from atlas/ into wfmath/, since we don't
	  need Atlas to install it, just to build the test code

Monday, December 31, 2001	Ron Steinke <rsteinke@w-link.net>

	* Added boundingSphere(), boundingSphereSloppy() to all
	  the shapes
	* Wrote FloatMin(), FloatMax(), and FloatClamp(). This
	  let me remove std::min() and std::max(), and with
	  them the dependency on <algorithm>
	* Cleaned up the inclusion of outside headers
	* Replaced double with CoordType everywhere, with the
	  exception of the precision/tolerance/epsilon arguments
	  of float comparison functions and the intenals of
	  IsFloatEqual()
	* Switched CoordType from double to float. This puts
	  the library precision at about 3e-6 (on my machine),
	  close to the precision of the strings being passed by
	  ToAtlas() and FromAtlas()
	* Replaced fromStream() with operator>>(), using fail()
	  flag to indicate a bad parse
	* Upped the version number from 0.0.1 to 0.1.0, as
	  the shape API appears to be settling down, and
	  it sure doesn't feel like 0.0 anymore

Monday, December 31, 2001	Ron Steinke <rsteinke@w-link.net>

	* Cleaned up string and stream stuff, classes only need
	  to include <iosfwd>, everything else is in stream.h/stream.cpp,
	  removed stringconv.h/stringconv.cpp

Sunday, December 30, 2001	Ron Steinke <rsteinke@w-link.net>

	* Finished the RotBox<> intersection functions
	* Cleaned up use of namespaces in *.cpp files
	* Added to the test code
	* Miscelaneous bug fixes

Saturday, December 29, 2001	Ron Steinke <rsteinke@w-link.net>

	* Fixed an error in the README

Saturday, December 29, 2001	Ron Steinke <rsteinke@w-link.net>

	* Wrote some documentation, cleaned up the little that was
	  already there.

Saturday, December 29, 2001	Ron Steinke <rsteinke@w-link.net>

	* Removed some unnecessary template specifications, changed
	  Vector<len> to Vector<dim> and RotMatrix<size> to RotMatrix<dim>
	  for cross class consistency in the name of the template parameter
	* Removed the base Shape<> class, leaving a bunch of simple classes
	  for basic shapes which possess a common interface
	* Changed test code to use toString() method directly rather than
	  through operator<<()
	* Changed ToAtlas() and FromAtlas() to use toString() and fromString(),
	  eliminating the need for a separately compiled atlas conversion
	  library
	* Added the shape interface functions to Point<>
	* Replaced the symlinks to COPYING and INSTALL files added by automake
	  with the files themselves. This should hopefully let me get them
	  into CVS.
	* More work on intersection functions

Tuesday, December 18, 2001	Ron Steinke <rsteinke@w-link.net>

	* Some cleanup on RotMatrix<>::setVals() backend, Atlas conversion
	  functions
	* Added Ball<>, Segment<>, RotBox<> classes (not all RotBox<>
	  intersection functions written yet)

Monday, December 17, 2001	Ron Steinke <rsteinke@w-link.net>

	* Wrote Shape<> base class
	* Wrote AxisBox<> class
	* Cleaned up header file naming convention, so foo_funcs.h is
	  always the function templates for the class in foo.h

Friday, December 14, 2001	Ron Steinke <rsteinke@w-link.net>

	* .cvsignore fixes
	* Rearranged the ordering of function declarations in the
	  classes in an attempt at a cross-class standard, added
	  some bits I'd missed
	* Added polar, spherical coordinate conversions to Point<> and Vector<>

Thursday, December 13, 2001	Ron Steinke <rsteinke@w-link.net>

	* Added setVals() method to Matrix<>
	* Added operator>> for Vector<>, Matrix<>, Point<> to give
	  string read capability, added stream_funcs.cpp
	* Added toString() and fromString() for Vector<>, Matrix<>, Point<>,
	  changed operator<< to use toString(), removed operator>>

Wednesday, December 12, 2001	Ron Steinke <rsteinke@w-link.net>

	* Created atlas_funcs.cpp, wrote GetAtlasDoubleList() and
	  SetAtlasDoubleList() to handle most of the Atlas
	  interface work
	* Got a test for Atlas into configure.in
	* First CVS upload
`	* Copied the CoalCoord class in as Point<>, moved CoordType
	  and IsFloatEqual() into const.h, const.cpp
	* Added FloatAdd() and FloatSubtract() to handle numbers
	  whose sum/difference is (nearly) zero
	* Modified Vector<> and Matrix<> to use CoordType

Tuesday, December 11, 2001	Ron Steinke <rsteinke@w-link.net>

	* Got test functions working with RotMatrix<>
	* Created atlas_funcs.h to hold Atlas interface code,
	  wrote ToAtlas() and FromAtlas() for Vector<> and
	  Matrix<>

Monday, December 10, 2001	Ron Steinke <rsteinke@w-link.net>

	* After coversation with Rakshasa about how matrices are actually
	  being used in stage, replaced Matrix<> with RotMatrix<>


Friday, December 7, 2001	Ron Steinke <rsteinke@w-link.net>

	* Created some tests in matrix_test
	* Added GPL information to all the source files

Thursday, December 6, 2001	Ron Steinke <rsteinke@w-link.net>

	* Added more tests to vector_test
	* Implemented sloppyMag and associated functions
	  for Vector<2>, Vector<3>
	* Added a script, bc_sloppy_mag_3, to calculate some constants
	  for the Vector<3> implementation of sloppyMag
	* Got rid of RowVector<> and ColumnVector<> classes,
	  added rowSet() and columnSet() to Matrix<>

Wednesday, December 5, 2001	Ron Steinke <rsteinke@w-link.net>

	* First ChangeLog entry
	* Autoconf is working, and the Vector<> and Matrix<> class compile
	* Got the README, AUTHORS, and TODO files written
	* Changed #include "foo.h" to #include <wfmath/foo.h> in
	  the header files
	* Added const.h
	* Created vector_test.cpp, matrix_test.cpp, started work on
	  vector_test
