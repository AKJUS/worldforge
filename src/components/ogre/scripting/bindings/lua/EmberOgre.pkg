$#include <SDL.h>

$#include <sigc++/sigc++.h>

$#include "components/ogre/MovementController.h"
$#include "components/ogre/Avatar.h"
$#include "components/ogre/camera/MainCamera.h"
$#include "components/ogre/EmberOgre.h"

$#include "components/ogre/EmberEntityFactory.h"

$#include "components/ogre/environment/Environment.h"

$#include "components/ogre/MousePicker.h"

$#include "components/ogre/MotionManager.h"
$#include "components/ogre/GUIManager.h"
$#include "components/ogre/terrain/TerrainInfo.h"
$#include "components/ogre/terrain/TerrainManager.h"

$#include "components/ogre/model/Model.h"
$#include "components/ogre/model/SubModel.h"

$#include "components/ogre/lod/LodDefinition.h"
$#include "components/ogre/lod/LodDefinitionManager.h"
$#include "components/ogre/lod/LodManager.h"
$#include "components/ogre/lod/PMInjectorSignaler.h"

$#include "components/ogre/widgets/Widget.h"

$#include "components/ogre/Convert.h"

$#include "components/ogre/widgets/MovableObjectRenderer.h"
$#include "components/ogre/widgets/OgreEntityRenderer.h"
$#include "components/ogre/widgets/ModelRenderer.h"
$#include "components/ogre/widgets/ListHolder.h"
$#include "components/ogre/widgets/Vector3Adapter.h"
$#include "components/ogre/widgets/QuaternionAdapter.h"
$#include "components/ogre/widgets/EntityEditor.h"
$#include "components/ogre/widgets/StackableContainer.h"
$#include "components/ogre/widgets/ConsoleAdapter.h"
$#include "components/ogre/widgets/ColouredListItem.h"
$#include "components/ogre/widgets/MeshInfoProvider.h"
$#include "components/ogre/widgets/adapters/atlas/MapAdapter.h"


$#include "components/ogre/widgets/IconBar.h"
$#include "components/ogre/widgets/IconBase.h"
//$#include "components/ogre/widgets/MaterialPicker.h"

$#include "components/ogre/model/Model.h"
$#include "components/ogre/model/ModelDefinition.h"
$#include "components/ogre/model/ModelDefinitionManager.h"
$#include "components/ogre/model/ModelDefinitionAtlasComposer.h"

$#include "components/ogre/IWorldPickListener.h"
$#include "components/ogre/EntityWorldPickListener.h"

$#include "components/ogre/authoring/EntityMoveManager.h"

$#include "components/ogre/OgreInfo.h"

$#include "components/ogre/SimpleRenderContext.h"


$#include "components/ogre/widgets/icons/Icon.h"
$#include "components/ogre/widgets/icons/IconManager.h"

$#include "components/ogre/widgets/EntityIconSlot.h"
$#include "components/ogre/widgets/EntityIcon.h"
$#include "components/ogre/widgets/EntityIconManager.h"
$#include "components/ogre/widgets/EntityIconDragDropTarget.h"

$#include "framework/EntityImporter.h"


$pfile "MainCamera.pkg"
$pfile "Screen.pkg"
$pfile "MovementController.pkg"
$pfile "Avatar.pkg"
$pfile "EmberEntityFactory.pkg"

$pfile "Environment.pkg"


$pfile "GUIManager.pkg"
//$pfile "MousePicker.pkg"
$pfile "TerrainManager.pkg"
$pfile "TerrainHandler.pkg"
$pfile "ITerrainAdapter.pkg"
$pfile "TerrainEditor.pkg"
$pfile "MotionManager.pkg"

$pfile "Widget.pkg"
$pfile "IconBase.pkg"
$pfile "IconBar.pkg"
$pfile "EntityEditor.pkg"
$pfile "StackableContainer.pkg"
$pfile "ConsoleAdapter.pkg"
$pfile "ColouredListItem.pkg"
$pfile "AssetsManager.pkg"
$pfile "AtlasHelper.pkg"
$pfile "Compass.pkg"
$pfile "EntityCreatorTypeHelper.pkg"
$pfile "ModelEditHelper.pkg"

$pfile "RuleTreeAdapter.pkg"
$pfile "ResourceListAdapter.pkg"

$pfile "Icon.pkg"
$pfile "IconManager.pkg"

$pfile "EntityIconSlot.pkg"
$pfile "EntityIcon.pkg"
$pfile "EntityIconManager.pkg"
$pfile "EntityIconDragDropTarget.pkg"
$pfile "EntityIconDragDropPreview.pkg"

$pfile "QuickHelpCursor.pkg"
$pfile "ActionBar.pkg"
$pfile "EntityTooltip.pkg"

$pfile "ActionBarIconSlot.pkg"
$pfile "ActionBarIcon.pkg"
$pfile "ActionBarIconManager.pkg"
$pfile "ActionBarIconDragDropTarget.pkg"

$pfile "Model.pkg"
$pfile "ModelRepresentation.pkg"
$pfile "SubModel.pkg"
$pfile "ModelDefinition.pkg"

$pfile "Convert.pkg"

$pfile "LodDefinition.pkg"
$pfile "LodDefinitionManager.pkg"
$pfile "LodManager.pkg"
$pfile "PMInjectorSignaler.pkg"

$pfile "SimpleRenderContext.pkg"
$pfile "MovableObjectRenderer.pkg"
$pfile "OgreEntityRenderer.pkg"
$pfile "ModelRenderer.pkg"
$pfile "ListHolder.pkg"
$pfile "EntityTextureManipulator.pkg"

$pfile "MeshInfoProvider.pkg"

//$pfile "MaterialPicker.pkg"

$pfile "IWorldPickListener.pkg"
$pfile "EntityWorldPickListener.pkg"

$pfile "ModelDefinitionManager.pkg"
$pfile "ModelDefinitionAtlasComposer.pkg"

$pfile "EntityMoveManager.pkg"

$pfile "GUIAdapter.pkg"
$pfile "EntityRecipe.pkg"
$pfile "EntityRecipeManager.pkg"
$pfile "EntityCreator.pkg"
$pfile "AuthoringManager.pkg"
$pfile "RuleEditor.pkg"


$pfile "stdlib.pkg"


$pfile "Vector3Adapter.pkg"
$pfile "QuaternionAdapter.pkg"

$pfile "Map.pkg"


$pfile "OgreInfo.pkg"

$pfile "TerrainLayerDefinition.pkg"
$pfile "TerrainLayerDefinitionManager.pkg"

$pfile "EntityCEGUITexture.pkg"

//$pfile "LuaConnector.pkg"
$pfile "World.pkg"
$pfile "Scene.pkg"

namespace Ember {
namespace OgreView {
class EmberOgre 
{
	static EmberOgre& getSingleton( void );

	Ember::OgreView::World* getWorld() const;

	Ember::OgreView::Screen& getScreen() const;
	
	Ogre::RenderWindow* getRenderWindow() const;
	
	sigc::signal<void, Ember::EmberEntity&> EventCreatedAvatarEntity;
		
	sigc::signal<void, Ember::OgreView::GUIManager&> EventGUIManagerCreated;
	sigc::signal<void, Ember::OgreView::GUIManager&> EventGUIManagerInitialized;

	/**
	 * @brief Emitted before the GUIManager is destroyed.
	 */
	sigc::signal<void> EventGUIManagerBeingDestroyed;

	/**
	 * @brief Emitted after the GUIManager has been destroyed.
	 */
	sigc::signal<void> EventGUIManagerDestroyed;
	

	/**
	 * @brief Emitted before the Ogre system is destroyed.
	 */
	sigc::signal<void> EventOgreBeingDestroyed;

	/**
	 * @brief Emitted after the Ogre system has been destroyed.
	 */
	sigc::signal<void> EventOgreDestroyed;
		
	sigc::signal<void, Ember::OgreView::MotionManager&> EventMotionManagerCreated;
	
	
	sigc::signal<void, Ember::OgreView::Terrain::TerrainManager&> EventTerrainManagerCreated;

	/**
	 * @brief Emitted right before the TerrainManager is destroyed.
	 */
	sigc::signal<void> EventTerrainManagerBeingDestroyed;

	/**
	 * @brief Emitted after the TerrainManager has been destroyed.
	 */
	sigc::signal<void> EventTerrainManagerDestroyed;
		
	/**
	 * @brief Emitted after the MotionManager has been destroyed.
	 */
	sigc::signal<void> EventMotionManagerDestroyed;
	
	sigc::signal<void> EventMovementControllerCreated;
	
	/**
	 * @brief Emitted after the MovementController has been destroyed.
	 */
	sigc::signal<void> EventMovementControllerDestroyed;

	
	/**
	 * @brief Emitted after a World instance has been created.
	 */
	sigc::signal<void, Ember::OgreView::World&> EventWorldCreated;

	/**
	 * @brief Emitted before a World instance has been destroyed.
	 */
	sigc::signal<void> EventWorldBeingDestroyed;

	/**
	 * @brief Emitted after a World instance has been destroyed.
	 */
	sigc::signal<void> EventWorldDestroyed;
};
}
}
