$#include "components/ogre/terrain/Map.h"

//
// C++ Interface: Map
//
// Description: 
//
//
// Author: Erik Ogenvik <erik@ogenvik.org>, (C) 2008
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.//
//


namespace Ember {
namespace OgreView {

namespace Terrain {

/**
	@author Erik Ogenvik <erik@ogenvik.org>
*/
class Map{
public:
    Map(Ogre::SceneManager& sceneManager);

    virtual ~Map();
    
    void initialize();
    
    Ogre::TexturePtr getTexture();
    
    void render();
    void reposition(Ogre::Vector2 pos);
    void reposition(float x, float y);
   
	void setDistance(float distance);
	float getDistance() const;

	/**
	 * @brief Gets the resolution in meters per pixel.
	 * @return The resolution in meters per pixel.
	 */
	float getResolution() const;
	
	/**
	 * @brief Sets the resolution of the map.
	 * The map will be rerendered after the resolution has been changed.
	 * @param metersPerPixel The resolution of the map in pixels per meter.
	 */
	void setResolution(float metersPerPixel);
	
	/**
	 * @brief Gets the resolution in meters of the map.
	 * @return The size of one side of the map in meters.
	 */
	float getResolutionMeters() const;	
	MapView& getView();
};

/**
	Represents a sub view of the map.
	@author Erik Ogenvik <erik@ogenvik.org>

*/
class MapView
{
public:

	bool reposition(Ogre::Vector2 pos);

};

}

}

}
