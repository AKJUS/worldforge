//
// C++ Interface: PolygonAdapter
//
// Description: 
//
//
// Author: Erik Ogenvik <erik@ogenvik.org>, (C) 2009
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.//
//
$#include "../../PolygonAdapter.h"

namespace Ember {
namespace OgreView {

namespace Gui {

namespace Adapters {

namespace Atlas {



/**
@brief An adapter for polygons.
This allows the editing of polygons through graphical drag and drop operations.
@author Erik Ogenvik <erik@ogenvik.org>
*/
class PolygonAdapter : public AdapterBase
{
public:

   
    /**
     * @brief Toggles the display of the graphical representation of the polygon.
     */
    void toggleDisplayOfPolygon();
    
    
    /**
     * @brief Creates a new polygon.
     */
    void createNewPolygon();
	
	/**
	 * @brief True if there's an existing polygon instance created from which a shape can be gotten.
	 * @return True if there's an existing polygon instance.
	 */
	bool hasShape() const;
	
	/**
	 * @brief Gets the polygon shape.
	 * Note that there's no guarantee that the polygon shape returned will be valid. Make sure to check with WFMath::Polygon::isValid().
	 * @return A polygon shape.
	 */
	const WFMath::Polygon<2> getShape();
    

};

}

}

}
}
}