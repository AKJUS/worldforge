$#include <Eris/Avatar.h>

namespace Eris
{
/** The players avatar representation. **/
class Avatar
{
public:

    /// Get the Mind id of this Avatar. All interaction with the entity goes through the Mind.
    const std::string & getId() const;

    // Get the Entity if of this Avatar. This can't be directly interacted with; all interaction must go through the Mind.
    const std::string & getEntityId() const;

    /// Get the Entity this Avatar refers to
    Entity* getEntity() const;

    View& getView() const;

    Connection& getConnection() const;

    void take(Entity*) const;

    void drop(Entity* entity, const WFMath::Point<3>& pos,
            const WFMath::Quaternion& orientation, const std::string& loc) const;

    void drop(Entity* entity, const WFMath::Vector<3>& offset = WFMath::Vector<3>(0, 0, 0),
            const WFMath::Quaternion& orientation = WFMath::Quaternion()) const;

     void wield(Eris::Entity* entity, std::string attachPoint) const;

};

} // of namespace Eris


