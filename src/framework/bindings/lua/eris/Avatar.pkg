$#include <Eris/Avatar.h>
$#include "Avatar_helper.h"

namespace Eris
{
/** The players avatar representation. **/
class Avatar
{
public:

    /// Get the Mind id of this Avatar. All interaction with the entity goes through the Mind.
    const std::string & getId() const;

    // Get the Entity if of this Avatar. This can't be directly interacted with; all interaction must go through the Mind.
    const std::string & getEntityId() const;

    /// Get the Entity this Avatar refers to
    Entity* getEntity() const;

    View& getView() const;

    Connection& getConnection() const;

	tolua_outside void _Avatar_place @ place(const Eris::Entity* entity,
			   const Eris::Entity* container,
			   const WFMath::Point<3>& pos,
			   const WFMath::Quaternion& orientation);

	tolua_outside void _Avatar_place @ place(const Eris::Entity* entity,
			   const Eris::Entity* container,
			   const WFMath::Point<3>& pos,
			   const WFMath::Quaternion& orientation,
			   float offset);

	tolua_outside void _Avatar_place @ place(const Eris::Entity* entity,
			   const Eris::Entity* container,
			   const WFMath::Point<3>& pos,
			   const WFMath::Quaternion& orientation,
			   float offset,
			   int amount);

	tolua_outside void _Avatar_take @ take(const Eris::Entity* entity, int amount = 1);


     void wield(Eris::Entity* entity, std::string attachPoint) const;

};

} // of namespace Eris


