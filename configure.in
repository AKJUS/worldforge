AC_INIT(src/Entity.cpp)

AM_INIT_AUTOMAKE(eris, 0.1.8)
AM_MAINTAINER_MODE

AM_CONFIG_HEADER(config.h)	

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CXX
AC_STDC_HEADERS
AM_PROG_LIBTOOL

CFLAGS="-g -Wall -ansi"
CXXFLAGS="-g -Wall -ansi"
CPPFLAGS=

dnl Make sure we've got sensible versions of the sources (eg to get snprintf)

AC_DEFINE(_XOPEN_SOURCE, 500)
AC_DEFINE(_ISOC99_SOURCE,1)

AC_LANG_SAVE
AC_LANG_CPLUSPLUS

AM_PATH_SIGC(1.0.0,[
	CPPFLAGS="$CPPFLAGS $SIGC_CFLAGS"
	LDFLAGS="$LDFLAGS $SIGC_LIBS"
	],
	AC_MSG_ERROR(Couldn't find libsigc++ config [or config failed])
)


dnl Check for libskstream library
AC_CHECK_LIB(skstream, main, LIBS="$LIBS -lskstream",
	AC_MSG_ERROR(Couldn't find skstream library; check you installed
	from forge/libs/skstream)
)

AC_CHECK_HEADER(skstream.h, , AC_MSG_ERROR(Couldn't find skstream header file)) 


AM_PATH_ATLAS(0.4.3, [
	CFLAGS="$CFLAGS $ATLAS_CFLAGS"
	CXXFLAGS="$CXXFLAGS $ATLAS_CXXFLAGS"
	LIBS="$LIBS $ATLAS_LIBS"],
	AC_MSG_ERROR(Couldn't find Atlas or version is insufficent)
)

AC_LANG_RESTORE

AC_ARG_ENABLE(python, 
[  --enable-python         Enable building of Pythin bindings
],
	enable_python=no
)
AM_CONDITIONAL(PYTHON_BINDINGS, test "x$enable_python" = "xyes")

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
Makefile
src/Makefile
eris.dox
])
