AC_INIT(Mercator/Mercator.cpp)

dnl Information

MERCATOR_MAJOR=0
MERCATOR_MINOR=0
MERCATOR_MICRO=0
MERCATOR_VERSION=$MERCATOR_MAJOR.$MERCATOR_MINOR.$MERCATOR_MICRO

AM_INIT_AUTOMAKE(Mercator, $MERCATOR_VERSION)
AM_MAINTAINER_MODE

dnl versioning info for libtool
MERCATOR_CURRENT=0
MERCATOR_REVISION=0
MERCATOR_AGE=0
MERCATOR_VERSION_INFO=$MERCATOR_CURRENT:$MERCATOR_REVISION:$MERCATOR_AGE

MERCATOR_LIB_SUFFIX="-0.2"
MERCATOR_LIBS="-lmercator$MERCATOR_LIB_SUFFIX"
MERCATOR_REQUIRES=""

AC_SUBST(MERCATOR_VERSION)
AC_SUBST(MERCATOR_VERSION_INFO)

AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CXX
AC_STDC_HEADERS
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

CXXFLAGS="$CXXFLAGS -Wall -ansi"

dnl Make sure we've got sensible versions of the sources (eg to get snprintf)

AC_DEFINE(_XOPEN_SOURCE, 500, [This is XOpen source])
AC_DEFINE(_ISOC99_SOURCE,1, [This is C99 source])

AC_LANG_SAVE
AC_LANG_CPLUSPLUS

dnl Check for Atlas-C++ and wfmath library
PKG_CHECK_MODULES(WF, wfmath-0.3,
    [
        CPPFLAGS="$CPPFLAGS $WF_CFLAGS"
        LIBS="$LIBS $WF_LIBS"
        MERCATOR_REQUIRES="$MERCATOR_REQUIRES wfmath-0.3"
    ],
    [
        AC_MSG_ERROR(Couldn't find Atlas or wfmath or version is insufficent)
    ])

AC_LANG_RESTORE

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)

SYSTEM_LIBS=""
MERCATOR_CFLAGS=""
AC_SUBST(SYSTEM_LIBS)
AC_SUBST(MERCATOR_LIB_SUFFIX)
AC_SUBST(MERCATOR_LIBS)
AC_SUBST(MERCATOR_CFLAGS)
AC_SUBST(MERCATOR_REQUIRES)

AC_OUTPUT([
Makefile
Mercator/Makefile
tests/Makefile
mercator.spec
mercator-0.2.pc
])
