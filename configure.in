AC_INIT(src/Entity.cpp)

dnl Information

ERIS_MAJOR=0
ERIS_MINOR=9
ERIS_MICRO=6
ERIS_VERSION=$ERIS_MAJOR.$ERIS_MINOR.$ERIS_MICRO

AC_SUBST(ERIS_VERSION)

dnl versioning info for libtool
ERIS_CURRENT=`expr $ERIS_MAJOR + $ERIS_MINOR`
ERIS_REVISION=$ERIS_MICRO
ERIS_AGE=$ERIS_MINOR
ERIS_VERSION_INFO=$ERIS_CURRENT:$ERIS_REVISION:$ERIS_AGE

AC_SUBST(ERIS_VERSION_INFO)

AM_INIT_AUTOMAKE(eris, $ERIS_VERSION)
AM_MAINTAINER_MODE

AM_CONFIG_HEADER(config.h)	

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CXX
AC_STDC_HEADERS
AM_PROG_LIBTOOL

CFLAGS="$CFLAGS -g -Wall -ansi"
CXXFLAGS="$CXXFLAGS -g -Wall -ansi"

dnl Make sure we've got sensible versions of the sources (eg to get snprintf)

AC_DEFINE(_XOPEN_SOURCE, 500)
AC_DEFINE(_ISOC99_SOURCE,1)

AC_LANG_SAVE
AC_LANG_CPLUSPLUS

PKG_CHECK_MODULES(SIGC, sigc++-1.2 >= 1.1.11,
    [
        CXXFLAGS="$CXXFLAGS $SIGC_CFLAGS"
        LDFLAGS="$LDFLAGS $SIGC_LIBS"
    ],
    [
        AM_PATH_SIGC(1.0.3,[
	        CXXFLAGS="$CXXFLAGS $SIGC_CFLAGS"
	        LDFLAGS="$LDFLAGS $SIGC_LIBS"
	        ],
		AC_MSG_ERROR(Couldn't find libsigc++ config [or config failed])
        )
    ])


dnl Check for libskstream library
AM_PATH_SKSTREAM(0.2.1, [
	CFLAGS="$CFLAGS $SKSTREAM_CFLAGS"
	CXXFLAGS="$CXXFLAGS $SKSTREAM_CFLAGS"
	LIBS="$LIBS $SKSTREAM_LIBS"],
	AC_MSG_ERROR(Couldn't find skstream or version is insufficent)
)



dnl Check for Atlas-C++ library
AM_PATH_ATLAS(0.4.4, [
	CFLAGS="$CFLAGS $ATLAS_CFLAGS"
	CXXFLAGS="$CXXFLAGS $ATLAS_CXXFLAGS"
	LIBS="$LIBS $ATLAS_LIBS"],
	AC_MSG_ERROR(Couldn't find Atlas or version is insufficent)
)

dnl Check for WFMath library
AM_PATH_WFMATH(0.2.6,[
	CXXFLAGS="$CXXFLAGS $WFMATH_CFLAGS"
	LDFLAGS="$LDFLAGS $WFMATH_LIBS"
	],
	AC_MSG_ERROR(Couldn't find wfmath config [or config failed])
)


AC_LANG_RESTORE

AC_ARG_ENABLE(python, 
[  --enable-python         Enable building of Pythin bindings
],
	enable_python=no
)
AM_CONDITIONAL(PYTHON_BINDINGS, test "x$enable_python" = "xyes")

AM_PATH_CPPUNIT(1.6.1,
    [
	enable_cppunit=yes
	AC_SUBST(CPPUNIT_CFLAGS)
	AC_SUBST(CPPUNIT_LIBS)
    ], [
	AC_MSG_WARN(Couldn't Find CppUnit - make check will not work)
	enable_cppunit=no
    ]
)

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)

SYSTEM_LIBS=""
ERIS_LIBS="-leris -lwfmath -lm"
ERIS_CFLAGS=""
AC_SUBST(SYSTEM_LIBS)
AC_SUBST(ERIS_LIBS)
AC_SUBST(ERIS_CFLAGS)

AC_OUTPUT([
Makefile
src/Makefile
test/Makefile
eris.dox
eris-config
])
