dnl Process this file with autoconf to produce a configure script.
AC_INIT(wfmath/wfmath.h)

WFMATH_MAJOR=0
WFMATH_MINOR=2
WFMATH_MICRO=10
WFMATH_VERSION=$WFMATH_MAJOR.$WFMATH_MINOR.$WFMATH_MICRO

AC_SUBST(WFMATH_MAJOR)
AC_SUBST(WFMATH_MINOR)
AC_SUBST(WFMATH_MICRO)
AC_SUBST(WFMATH_VERSION)

dnl versioning info for libtool
WFMATH_CURRENT=`expr $WFMATH_MAJOR + $WFMATH_MINOR`
WFMATH_REVISION=$WFMATH_MICRO
WFMATH_AGE=$WFMATH_MINOR
WFMATH_VERSION_INFO=$WFMATH_CURRENT:$WFMATH_REVISION:$WFMATH_AGE
WFMATH_VERSION_NO=$WFMATH_CURRENT.$WFMATH_AGE.$WFMATH_REVISION

AC_SUBST(WFMATH_CURRENT)
AC_SUBST(WFMATH_VERSION_INFO)
AC_SUBST(WFMATH_VERSION_NO)

AM_INIT_AUTOMAKE(wfmath, $WFMATH_VERSION)
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_CXX
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

dnl Checks for libraries.
dnl Replace `main' with a function in -libs:
WFMATH_CFLAGS=""
WFMATH_LIBS="-lwfmath -lm"

AM_PATH_ATLAS(0.4.3, [
                      found_atlas=yes
dnl Don't add Atlas CFLAGS, LIBS, since Atlas is only used in
dnl conversion functions to Atlas::Message::Object. Anyone using
dnl those should already be using atlas-config explicitly.
                     ], [
    AC_MSG_RESULT(*** Could not find libAtlas...not building Atlas conversion tests)
    found_atlas=no
]) 
AM_CONDITIONAL(HAVE_ATLAS, test $found_atlas == yes)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sstream strstream, [ found_string_stream=yes break ],
				    [ found_string_stream=no ])
if test $found_string_stream == no ; then
    AC_MSG_ERROR(Couldn't find C++ string <-> stream conversion method.)
fi

dnl Checks for typedefs, structures, and compiler characteristics.
dnl AC_C_CONST

dnl Checks for library functions.

AC_SUBST(WFMATH_CFLAGS)
AC_SUBST(WFMATH_LIBS)

AC_OUTPUT([Makefile 
           wfmath/Makefile 
           atlas/Makefile 
           doc/Makefile
           doc/Doxyfile
           wfmath-config
           wfmath.spec
])
